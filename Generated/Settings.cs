// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uplay.Settings {

  /// <summary>Holder for reflection information generated from settings.proto</summary>
  public static partial class SettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZXR0aW5ncy5wcm90bxIUbWcucHJvdG9jb2wuc2V0dGluZ3MaIGdvb2ds",
            "ZS9wcm90b2J1Zi9kZXNjcmlwdG9yLnByb3RvItYCCgRVc2VyEhsKDXN5bmNz",
            "YXZlZ2FtZXMYASABKAg6BHRydWUSFgoHb2ZmbGluZRgCIAEoCDoFZmFsc2US",
            "UwoNY2xvc2ViZWhhdmlvchgDIAEoDjIjLm1nLnByb3RvY29sLnNldHRpbmdz",
            "LkNsb3NlQmVoYXZpb3I6F0Nsb3NlQmVoYXZpb3JfVW5kZWZpbmVkEkcKC2xh",
            "bmRpbmdwYWdlGAQgASgOMiEubWcucHJvdG9jb2wuc2V0dGluZ3MuTGFuZGlu",
            "Z1BhZ2U6D0xhbmRpbmdQYWdlTmV3cxIlChZzdGFydF9vbl93aW5kb3dzX3N0",
            "YXJ0GAUgASgIOgVmYWxzZRIsCh5ub25fZnJpZW5kX2dhbWVfaW52aXRlX2Vu",
            "YWJsZWQYBiABKAg6BHRydWUSJgoXbGFuZGluZ3BhZ2Vfc2V0X2J5X3VzZXIY",
            "ByABKAg6BWZhbHNlInsKB092ZXJsYXkSFQoHZW5hYmxlZBgBIAEoCDoEdHJ1",
            "ZRIeCg9mb3JjZXVuaG9va2dhbWUYAiABKAg6BWZhbHNlEhoKC2Zwc19lbmFi",
            "bGVkGAMgASgIOgVmYWxzZRIdCg93YXJuaW5nX2VuYWJsZWQYBCABKAg6BHRy",
            "dWUiHwoITGFuZ3VhZ2USEwoEY29kZRgBIAEoCToFZW4tVVMi7QEKBE1pc2MS",
            "HAoUaW5zdGFsbGVyX2NhY2hlX3BhdGgYASABKAkSHAoUc2NyZWVuc2hvdF9y",
            "b290X3BhdGgYAiABKAkSMQoiZW5hYmxlX3NjcmVlbnNob3RzX29uX2FjaGll",
            "dmVtZW50cxgDIAEoCDoFZmFsc2USHgoWZ2FtZV9pbnN0YWxsYXRpb25fcGF0",
            "aBgEIAEoCRIkChZlbmFibGVfYXV0b193YWxsX3Bvc3RzGAUgASgIOgR0cnVl",
            "EjAKIXNhdmVfc2NyZWVuc2hvdF91bmNvbXByZXNzZWRfY29weRgGIAEoCDoF",
            "ZmFsc2UiagoIUG9zaXRpb24SDwoEbGVmdBgBIAEoDToBMBIOCgN0b3AYAiAB",
            "KA06ATASEAoFd2lkdGgYAyABKA06ATASEQoGaGVpZ2h0GAQgASgNOgEwEhgK",
            "CW1heGltaXplZBgFIAEoCDoFZmFsc2UiiQEKEU1vZGVsZXNzUG9zaXRpb25z",
            "EjYKDmZyaWVuZHNfd2luZG93GAEgASgLMh4ubWcucHJvdG9jb2wuc2V0dGlu",
            "Z3MuUG9zaXRpb24SPAoUY29udmVyc2F0aW9uc193aW5kb3cYAiABKAsyHi5t",
            "Zy5wcm90b2NvbC5zZXR0aW5ncy5Qb3NpdGlvbiK4BQoNTm90aWZpY2F0aW9u",
            "cxIbCg1pbkdhbWVFbmFibGVkGAEgASgIOgR0cnVlEiQKFnBlcm1hbmVudElu",
            "R2FtZUVuYWJsZWQYAiABKAg6BHRydWUSJwoZaW5HYW1lRnJpZW5kT25saW5l",
            "RW5hYmxlZBgDIAEoCDoEdHJ1ZRIcCg5zeXNUcmF5RW5hYmxlZBgEIAEoCDoE",
            "dHJ1ZRIpChtkZXNrdG9wRnJpZW5kUmVxdWVzdEVuYWJsZWQYBSABKAg6BHRy",
            "dWUSKAoaZGVza3RvcEZyaWVuZE9ubGluZUVuYWJsZWQYBiABKAg6BHRydWUS",
            "IAoSZGVza3RvcENoYXRFbmFibGVkGAcgASgIOgR0cnVlEiYKGGRlc2t0b3BG",
            "cmllbmRHYW1lRW5hYmxlZBgIIAEoCDoEdHJ1ZRImChhkZXNrdG9wR2FtZUlu",
            "dml0ZUVuYWJsZWQYCSABKAg6BHRydWUSJwoZZGVza3RvcFBhcnR5SW52aXRl",
            "RW5hYmxlZBgKIAEoCDoEdHJ1ZRIsCh5kZXNrdG9wRG93bmxvYWRDb21wbGV0",
            "ZUVuYWJsZWQYCyABKAg6BHRydWUSLgogZGVza3RvcEdhbWVQYXRjaEF2YWls",
            "YWJsZUVuYWJsZWQYDCABKAg6BHRydWUSKQobZGVza3RvcFBsYXlBdmFpbGFi",
            "bGVFbmFibGVkGA0gASgIOgR0cnVlEicKGWRlc2t0b3BHcm91cEludml0ZUVu",
            "YWJsZWQYDiABKAg6BHRydWUSJwoZZGVza3RvcFNjcmVlbnNob3RzRW5hYmxl",
            "ZBgPIAEoCDoEdHJ1ZRIoChpkZXNrdG9wQWNoaWV2ZW1lbnRzRW5hYmxlZBgQ",
            "IAEoCDoEdHJ1ZRIoChlkZXNrdG9wQ2x1YkFjdGlvbnNFbmFibGVkGBEgASgI",
            "OgVmYWxzZSItCgdNYXN0ZXJzEhAKCHVzZXJuYW1lGAEgASgJEhAKCHBhc3N3",
            "b3JkGAIgASgJIm0KBkhvdGtleRISCgdrZXlDb2RlGAEgASgNOgEwEhcKCGFs",
            "dFN0YXRlGAIgASgIOgVmYWxzZRIZCgpzaGlmdFN0YXRlGAMgASgIOgVmYWxz",
            "ZRIbCgxjb250cm9sU3RhdGUYBCABKAg6BWZhbHNlImIKCURvd25sb2FkcxIX",
            "CgVsaW1pdBgBIAEoBDoIMTAwMDAwMDASGwoMbGltaXRFbmFibGVkGAIgASgI",
            "OgVmYWxzZRIfChFwYXVzZU9uR2FtZUxhdW5jaBgDIAEoCDoEdHJ1ZSIdCgVC",
            "ZXRhcxIUCgVvcHRJbhgBIAEoCDoFZmFsc2UiJQoMQXV0b1BhdGNoaW5nEhUK",
            "B2VuYWJsZWQYASABKAg6BHRydWUiIgoJU3BvdGxpZ2h0EhUKB2VuYWJsZWQY",
            "ASABKAg6BHRydWUiMgoNQ29udmVyc2F0aW9ucxIhChJ0YXNrYmFyVGFic0Vu",
            "YWJsZWQYASABKAg6BWZhbHNlIhwKBEVwaWMSFAoMZXhjaGFuZ2VDb2RlGAEg",
            "ASgJIiwKEEJyYW5kZWRJbnN0YWxsZXISGAoQcGVuZGluZ19wcm90b2NvbBgB",
            "IAEoCSKbAgoJU2hhcmVQbGF5EhMKB2JpdHJhdGUYASABKA06AjIwEh8KEWRp",
            "c3BsYXlPbmJvYXJkaW5nGAIgASgIOgR0cnVlEisKHW1vdXNlQW5kS2V5Ym9h",
            "cmRBY2Nlc3NBbGxvd2VkGAMgASgIOgR0cnVlEiIKFGdhbWVwYWRBY2Nlc3NB",
            "bGxvd2VkGAQgASgIOgR0cnVlEh8KEWRpc3BsYXlXaXphcmRUb3VyGAUgASgI",
            "OgR0cnVlEioKH2xhc3RUaW1lRmVlZEJhY2tXaW5kb3dEaXNwbGF5ZWQYBiAB",
            "KA06ATASGwoQbmJCdXlHYW1lUmVmdXNlZBgHIAEoDToBMBIdChJuYkZlZWRi",
            "YWNrVW5maWxsZWQYCCABKA06ATAijAgKDVNldHRpbmdzTW9kZWwSKAoEdXNl",
            "chgBIAEoCzIaLm1nLnByb3RvY29sLnNldHRpbmdzLlVzZXISLgoHb3Zlcmxh",
            "eRgCIAEoCzIdLm1nLnByb3RvY29sLnNldHRpbmdzLk92ZXJsYXkSMAoIbGFu",
            "Z3VhZ2UYAyABKAsyHi5tZy5wcm90b2NvbC5zZXR0aW5ncy5MYW5ndWFnZRIo",
            "CgRtaXNjGAQgASgLMhoubWcucHJvdG9jb2wuc2V0dGluZ3MuTWlzYxIwCghw",
            "b3NpdGlvbhgFIAEoCzIeLm1nLnByb3RvY29sLnNldHRpbmdzLlBvc2l0aW9u",
            "EjoKDW5vdGlmaWNhdGlvbnMYBiABKAsyIy5tZy5wcm90b2NvbC5zZXR0aW5n",
            "cy5Ob3RpZmljYXRpb25zEi4KB21hc3RlcnMYByABKAsyHS5tZy5wcm90b2Nv",
            "bC5zZXR0aW5ncy5NYXN0ZXJzEjsKFWhvdGtleXNfb3ZlcmxheVRvZ2dsZRgJ",
            "IAEoCzIcLm1nLnByb3RvY29sLnNldHRpbmdzLkhvdGtleRI5ChNob3RrZXlz",
            "X292ZXJsYXlIaWRlGAogASgLMhwubWcucHJvdG9jb2wuc2V0dGluZ3MuSG90",
            "a2V5Ej8KGWhvdGtleXNfY2FwdHVyZVNjcmVlbnNob3QYCyABKAsyHC5tZy5w",
            "cm90b2NvbC5zZXR0aW5ncy5Ib3RrZXkSMgoJZG93bmxvYWRzGAwgASgLMh8u",
            "bWcucHJvdG9jb2wuc2V0dGluZ3MuRG93bmxvYWRzEioKBWJldGFzGA0gASgL",
            "MhsubWcucHJvdG9jb2wuc2V0dGluZ3MuQmV0YXMSOAoMYXV0b1BhdGNoaW5n",
            "GA4gASgLMiIubWcucHJvdG9jb2wuc2V0dGluZ3MuQXV0b1BhdGNoaW5nEjIK",
            "CXNwb3RsaWdodBgPIAEoCzIfLm1nLnByb3RvY29sLnNldHRpbmdzLlNwb3Rs",
            "aWdodBJDChJtb2RlbGVzc19wb3NpdGlvbnMYECABKAsyJy5tZy5wcm90b2Nv",
            "bC5zZXR0aW5ncy5Nb2RlbGVzc1Bvc2l0aW9ucxI6Cg1jb252ZXJzYXRpb25z",
            "GBEgASgLMiMubWcucHJvdG9jb2wuc2V0dGluZ3MuQ29udmVyc2F0aW9ucxIo",
            "CgRlcGljGBIgASgLMhoubWcucHJvdG9jb2wuc2V0dGluZ3MuRXBpYxJBChFi",
            "cmFuZGVkX2luc3RhbGxlchgTIAEoCzImLm1nLnByb3RvY29sLnNldHRpbmdz",
            "LkJyYW5kZWRJbnN0YWxsZXISMgoJc2hhcmVQbGF5GBQgASgLMh8ubWcucHJv",
            "dG9jb2wuc2V0dGluZ3MuU2hhcmVQbGF5KmEKDUNsb3NlQmVoYXZpb3ISGwoX",
            "Q2xvc2VCZWhhdmlvcl9VbmRlZmluZWQQABIXChNDbG9zZUJlaGF2aW9yX0Ns",
            "b3NlEAESGgoWQ2xvc2VCZWhhdmlvcl9NaW5pbWl6ZRACKnEKC0xhbmRpbmdQ",
            "YWdlEhMKD0xhbmRpbmdQYWdlTmV3cxAAEhQKEExhbmRpbmdQYWdlR2FtZXMQ",
            "ARIdChlMYW5kaW5nUGFnZUxhc3RQbGF5ZWRHYW1lEAISGAoUTGFuZGluZ1Bh",
            "Z2VVcGxheVBsdXMQAzo9ChRkaXNhYmxlU3RhdHNUcmFja2luZxIdLmdvb2ds",
            "ZS5wcm90b2J1Zi5GaWVsZE9wdGlvbnMY0IYDIAEoCDpGChtkaXNhYmxlTWVz",
            "c2FnZVN0YXRzVHJhY2tpbmcSHy5nb29nbGUucHJvdG9idWYuTWVzc2FnZU9w",
            "dGlvbnMY0YYDIAEoCA=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Uplay.Settings.CloseBehavior), typeof(global::Uplay.Settings.LandingPage), }, new pb::Extension[] { SettingsExtensions.DisableStatsTracking, SettingsExtensions.DisableMessageStatsTracking }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.User), global::Uplay.Settings.User.Parser, new[]{ "Syncsavegames", "Offline", "Closebehavior", "Landingpage", "StartOnWindowsStart", "NonFriendGameInviteEnabled", "LandingpageSetByUser" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Overlay), global::Uplay.Settings.Overlay.Parser, new[]{ "Enabled", "Forceunhookgame", "FpsEnabled", "WarningEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Language), global::Uplay.Settings.Language.Parser, new[]{ "Code" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Misc), global::Uplay.Settings.Misc.Parser, new[]{ "InstallerCachePath", "ScreenshotRootPath", "EnableScreenshotsOnAchievements", "GameInstallationPath", "EnableAutoWallPosts", "SaveScreenshotUncompressedCopy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Position), global::Uplay.Settings.Position.Parser, new[]{ "Left", "Top", "Width", "Height", "Maximized" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.ModelessPositions), global::Uplay.Settings.ModelessPositions.Parser, new[]{ "FriendsWindow", "ConversationsWindow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Notifications), global::Uplay.Settings.Notifications.Parser, new[]{ "InGameEnabled", "PermanentInGameEnabled", "InGameFriendOnlineEnabled", "SysTrayEnabled", "DesktopFriendRequestEnabled", "DesktopFriendOnlineEnabled", "DesktopChatEnabled", "DesktopFriendGameEnabled", "DesktopGameInviteEnabled", "DesktopPartyInviteEnabled", "DesktopDownloadCompleteEnabled", "DesktopGamePatchAvailableEnabled", "DesktopPlayAvailableEnabled", "DesktopGroupInviteEnabled", "DesktopScreenshotsEnabled", "DesktopAchievementsEnabled", "DesktopClubActionsEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Masters), global::Uplay.Settings.Masters.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Hotkey), global::Uplay.Settings.Hotkey.Parser, new[]{ "KeyCode", "AltState", "ShiftState", "ControlState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Downloads), global::Uplay.Settings.Downloads.Parser, new[]{ "Limit", "LimitEnabled", "PauseOnGameLaunch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Betas), global::Uplay.Settings.Betas.Parser, new[]{ "OptIn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.AutoPatching), global::Uplay.Settings.AutoPatching.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Spotlight), global::Uplay.Settings.Spotlight.Parser, new[]{ "Enabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Conversations), global::Uplay.Settings.Conversations.Parser, new[]{ "TaskbarTabsEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.Epic), global::Uplay.Settings.Epic.Parser, new[]{ "ExchangeCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.BrandedInstaller), global::Uplay.Settings.BrandedInstaller.Parser, new[]{ "PendingProtocol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.SharePlay), global::Uplay.Settings.SharePlay.Parser, new[]{ "Bitrate", "DisplayOnboarding", "MouseAndKeyboardAccessAllowed", "GamepadAccessAllowed", "DisplayWizardTour", "LastTimeFeedBackWindowDisplayed", "NbBuyGameRefused", "NbFeedbackUnfilled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uplay.Settings.SettingsModel), global::Uplay.Settings.SettingsModel.Parser, new[]{ "User", "Overlay", "Language", "Misc", "Position", "Notifications", "Masters", "HotkeysOverlayToggle", "HotkeysOverlayHide", "HotkeysCaptureScreenshot", "Downloads", "Betas", "AutoPatching", "Spotlight", "ModelessPositions", "Conversations", "Epic", "BrandedInstaller", "SharePlay" }, null, null, null, null)
          }));
    }
    #endregion

  }
  /// <summary>Holder for extension identifiers generated from the top level of settings.proto</summary>
  public static partial class SettingsExtensions {
    public static readonly pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool> DisableStatsTracking =
      new pb::Extension<global::Google.Protobuf.Reflection.FieldOptions, bool>(50000, pb::FieldCodec.ForBool(400000, false));
    public static readonly pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, bool> DisableMessageStatsTracking =
      new pb::Extension<global::Google.Protobuf.Reflection.MessageOptions, bool>(50001, pb::FieldCodec.ForBool(400008, false));
  }

  #region Enums
  public enum CloseBehavior {
    [pbr::OriginalName("CloseBehavior_Undefined")] Undefined = 0,
    [pbr::OriginalName("CloseBehavior_Close")] Close = 1,
    [pbr::OriginalName("CloseBehavior_Minimize")] Minimize = 2,
  }

  public enum LandingPage {
    [pbr::OriginalName("LandingPageNews")] News = 0,
    [pbr::OriginalName("LandingPageGames")] Games = 1,
    [pbr::OriginalName("LandingPageLastPlayedGame")] LastPlayedGame = 2,
    [pbr::OriginalName("LandingPageUplayPlus")] UplayPlus = 3,
  }

  #endregion

  #region Messages
  public sealed partial class User : pb::IMessage<User>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User(User other) : this() {
      _hasBits0 = other._hasBits0;
      syncsavegames_ = other.syncsavegames_;
      offline_ = other.offline_;
      closebehavior_ = other.closebehavior_;
      landingpage_ = other.landingpage_;
      startOnWindowsStart_ = other.startOnWindowsStart_;
      nonFriendGameInviteEnabled_ = other.nonFriendGameInviteEnabled_;
      landingpageSetByUser_ = other.landingpageSetByUser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "syncsavegames" field.</summary>
    public const int SyncsavegamesFieldNumber = 1;
    private readonly static bool SyncsavegamesDefaultValue = true;

    private bool syncsavegames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Syncsavegames {
      get { if ((_hasBits0 & 1) != 0) { return syncsavegames_; } else { return SyncsavegamesDefaultValue; } }
      set {
        _hasBits0 |= 1;
        syncsavegames_ = value;
      }
    }
    /// <summary>Gets whether the "syncsavegames" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSyncsavegames {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "syncsavegames" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSyncsavegames() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "offline" field.</summary>
    public const int OfflineFieldNumber = 2;
    private readonly static bool OfflineDefaultValue = false;

    private bool offline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Offline {
      get { if ((_hasBits0 & 2) != 0) { return offline_; } else { return OfflineDefaultValue; } }
      set {
        _hasBits0 |= 2;
        offline_ = value;
      }
    }
    /// <summary>Gets whether the "offline" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOffline {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "offline" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOffline() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "closebehavior" field.</summary>
    public const int ClosebehaviorFieldNumber = 3;
    private readonly static global::Uplay.Settings.CloseBehavior ClosebehaviorDefaultValue = global::Uplay.Settings.CloseBehavior.Undefined;

    private global::Uplay.Settings.CloseBehavior closebehavior_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.CloseBehavior Closebehavior {
      get { if ((_hasBits0 & 4) != 0) { return closebehavior_; } else { return ClosebehaviorDefaultValue; } }
      set {
        _hasBits0 |= 4;
        closebehavior_ = value;
      }
    }
    /// <summary>Gets whether the "closebehavior" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasClosebehavior {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "closebehavior" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearClosebehavior() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "landingpage" field.</summary>
    public const int LandingpageFieldNumber = 4;
    private readonly static global::Uplay.Settings.LandingPage LandingpageDefaultValue = global::Uplay.Settings.LandingPage.News;

    private global::Uplay.Settings.LandingPage landingpage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.LandingPage Landingpage {
      get { if ((_hasBits0 & 8) != 0) { return landingpage_; } else { return LandingpageDefaultValue; } }
      set {
        _hasBits0 |= 8;
        landingpage_ = value;
      }
    }
    /// <summary>Gets whether the "landingpage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLandingpage {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "landingpage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLandingpage() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "start_on_windows_start" field.</summary>
    public const int StartOnWindowsStartFieldNumber = 5;
    private readonly static bool StartOnWindowsStartDefaultValue = false;

    private bool startOnWindowsStart_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool StartOnWindowsStart {
      get { if ((_hasBits0 & 16) != 0) { return startOnWindowsStart_; } else { return StartOnWindowsStartDefaultValue; } }
      set {
        _hasBits0 |= 16;
        startOnWindowsStart_ = value;
      }
    }
    /// <summary>Gets whether the "start_on_windows_start" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStartOnWindowsStart {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "start_on_windows_start" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStartOnWindowsStart() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "non_friend_game_invite_enabled" field.</summary>
    public const int NonFriendGameInviteEnabledFieldNumber = 6;
    private readonly static bool NonFriendGameInviteEnabledDefaultValue = true;

    private bool nonFriendGameInviteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool NonFriendGameInviteEnabled {
      get { if ((_hasBits0 & 32) != 0) { return nonFriendGameInviteEnabled_; } else { return NonFriendGameInviteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 32;
        nonFriendGameInviteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "non_friend_game_invite_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNonFriendGameInviteEnabled {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "non_friend_game_invite_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNonFriendGameInviteEnabled() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "landingpage_set_by_user" field.</summary>
    public const int LandingpageSetByUserFieldNumber = 7;
    private readonly static bool LandingpageSetByUserDefaultValue = false;

    private bool landingpageSetByUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LandingpageSetByUser {
      get { if ((_hasBits0 & 64) != 0) { return landingpageSetByUser_; } else { return LandingpageSetByUserDefaultValue; } }
      set {
        _hasBits0 |= 64;
        landingpageSetByUser_ = value;
      }
    }
    /// <summary>Gets whether the "landingpage_set_by_user" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLandingpageSetByUser {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "landingpage_set_by_user" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLandingpageSetByUser() {
      _hasBits0 &= ~64;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Syncsavegames != other.Syncsavegames) return false;
      if (Offline != other.Offline) return false;
      if (Closebehavior != other.Closebehavior) return false;
      if (Landingpage != other.Landingpage) return false;
      if (StartOnWindowsStart != other.StartOnWindowsStart) return false;
      if (NonFriendGameInviteEnabled != other.NonFriendGameInviteEnabled) return false;
      if (LandingpageSetByUser != other.LandingpageSetByUser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSyncsavegames) hash ^= Syncsavegames.GetHashCode();
      if (HasOffline) hash ^= Offline.GetHashCode();
      if (HasClosebehavior) hash ^= Closebehavior.GetHashCode();
      if (HasLandingpage) hash ^= Landingpage.GetHashCode();
      if (HasStartOnWindowsStart) hash ^= StartOnWindowsStart.GetHashCode();
      if (HasNonFriendGameInviteEnabled) hash ^= NonFriendGameInviteEnabled.GetHashCode();
      if (HasLandingpageSetByUser) hash ^= LandingpageSetByUser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSyncsavegames) {
        output.WriteRawTag(8);
        output.WriteBool(Syncsavegames);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (HasClosebehavior) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Closebehavior);
      }
      if (HasLandingpage) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        output.WriteRawTag(40);
        output.WriteBool(StartOnWindowsStart);
      }
      if (HasNonFriendGameInviteEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(NonFriendGameInviteEnabled);
      }
      if (HasLandingpageSetByUser) {
        output.WriteRawTag(56);
        output.WriteBool(LandingpageSetByUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSyncsavegames) {
        output.WriteRawTag(8);
        output.WriteBool(Syncsavegames);
      }
      if (HasOffline) {
        output.WriteRawTag(16);
        output.WriteBool(Offline);
      }
      if (HasClosebehavior) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Closebehavior);
      }
      if (HasLandingpage) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        output.WriteRawTag(40);
        output.WriteBool(StartOnWindowsStart);
      }
      if (HasNonFriendGameInviteEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(NonFriendGameInviteEnabled);
      }
      if (HasLandingpageSetByUser) {
        output.WriteRawTag(56);
        output.WriteBool(LandingpageSetByUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSyncsavegames) {
        size += 1 + 1;
      }
      if (HasOffline) {
        size += 1 + 1;
      }
      if (HasClosebehavior) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Closebehavior);
      }
      if (HasLandingpage) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Landingpage);
      }
      if (HasStartOnWindowsStart) {
        size += 1 + 1;
      }
      if (HasNonFriendGameInviteEnabled) {
        size += 1 + 1;
      }
      if (HasLandingpageSetByUser) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.HasSyncsavegames) {
        Syncsavegames = other.Syncsavegames;
      }
      if (other.HasOffline) {
        Offline = other.Offline;
      }
      if (other.HasClosebehavior) {
        Closebehavior = other.Closebehavior;
      }
      if (other.HasLandingpage) {
        Landingpage = other.Landingpage;
      }
      if (other.HasStartOnWindowsStart) {
        StartOnWindowsStart = other.StartOnWindowsStart;
      }
      if (other.HasNonFriendGameInviteEnabled) {
        NonFriendGameInviteEnabled = other.NonFriendGameInviteEnabled;
      }
      if (other.HasLandingpageSetByUser) {
        LandingpageSetByUser = other.LandingpageSetByUser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Syncsavegames = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 24: {
            Closebehavior = (global::Uplay.Settings.CloseBehavior) input.ReadEnum();
            break;
          }
          case 32: {
            Landingpage = (global::Uplay.Settings.LandingPage) input.ReadEnum();
            break;
          }
          case 40: {
            StartOnWindowsStart = input.ReadBool();
            break;
          }
          case 48: {
            NonFriendGameInviteEnabled = input.ReadBool();
            break;
          }
          case 56: {
            LandingpageSetByUser = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Syncsavegames = input.ReadBool();
            break;
          }
          case 16: {
            Offline = input.ReadBool();
            break;
          }
          case 24: {
            Closebehavior = (global::Uplay.Settings.CloseBehavior) input.ReadEnum();
            break;
          }
          case 32: {
            Landingpage = (global::Uplay.Settings.LandingPage) input.ReadEnum();
            break;
          }
          case 40: {
            StartOnWindowsStart = input.ReadBool();
            break;
          }
          case 48: {
            NonFriendGameInviteEnabled = input.ReadBool();
            break;
          }
          case 56: {
            LandingpageSetByUser = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Overlay : pb::IMessage<Overlay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Overlay> _parser = new pb::MessageParser<Overlay>(() => new Overlay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Overlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay(Overlay other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      forceunhookgame_ = other.forceunhookgame_;
      fpsEnabled_ = other.fpsEnabled_;
      warningEnabled_ = other.warningEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Overlay Clone() {
      return new Overlay(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "forceunhookgame" field.</summary>
    public const int ForceunhookgameFieldNumber = 2;
    private readonly static bool ForceunhookgameDefaultValue = false;

    private bool forceunhookgame_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Forceunhookgame {
      get { if ((_hasBits0 & 2) != 0) { return forceunhookgame_; } else { return ForceunhookgameDefaultValue; } }
      set {
        _hasBits0 |= 2;
        forceunhookgame_ = value;
      }
    }
    /// <summary>Gets whether the "forceunhookgame" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasForceunhookgame {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "forceunhookgame" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearForceunhookgame() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "fps_enabled" field.</summary>
    public const int FpsEnabledFieldNumber = 3;
    private readonly static bool FpsEnabledDefaultValue = false;

    private bool fpsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FpsEnabled {
      get { if ((_hasBits0 & 4) != 0) { return fpsEnabled_; } else { return FpsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        fpsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "fps_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFpsEnabled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "fps_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFpsEnabled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "warning_enabled" field.</summary>
    public const int WarningEnabledFieldNumber = 4;
    private readonly static bool WarningEnabledDefaultValue = true;

    private bool warningEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WarningEnabled {
      get { if ((_hasBits0 & 8) != 0) { return warningEnabled_; } else { return WarningEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        warningEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "warning_enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWarningEnabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "warning_enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWarningEnabled() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Overlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Overlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      if (Forceunhookgame != other.Forceunhookgame) return false;
      if (FpsEnabled != other.FpsEnabled) return false;
      if (WarningEnabled != other.WarningEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (HasForceunhookgame) hash ^= Forceunhookgame.GetHashCode();
      if (HasFpsEnabled) hash ^= FpsEnabled.GetHashCode();
      if (HasWarningEnabled) hash ^= WarningEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (HasForceunhookgame) {
        output.WriteRawTag(16);
        output.WriteBool(Forceunhookgame);
      }
      if (HasFpsEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(FpsEnabled);
      }
      if (HasWarningEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(WarningEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (HasForceunhookgame) {
        output.WriteRawTag(16);
        output.WriteBool(Forceunhookgame);
      }
      if (HasFpsEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(FpsEnabled);
      }
      if (HasWarningEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(WarningEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (HasForceunhookgame) {
        size += 1 + 1;
      }
      if (HasFpsEnabled) {
        size += 1 + 1;
      }
      if (HasWarningEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Overlay other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.HasForceunhookgame) {
        Forceunhookgame = other.Forceunhookgame;
      }
      if (other.HasFpsEnabled) {
        FpsEnabled = other.FpsEnabled;
      }
      if (other.HasWarningEnabled) {
        WarningEnabled = other.WarningEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Forceunhookgame = input.ReadBool();
            break;
          }
          case 24: {
            FpsEnabled = input.ReadBool();
            break;
          }
          case 32: {
            WarningEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
          case 16: {
            Forceunhookgame = input.ReadBool();
            break;
          }
          case 24: {
            FpsEnabled = input.ReadBool();
            break;
          }
          case 32: {
            WarningEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Language : pb::IMessage<Language>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Language> _parser = new pb::MessageParser<Language>(() => new Language());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Language> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language(Language other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Language Clone() {
      return new Language(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private readonly static string CodeDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("ZW4tVVM="), 0, 5);

    private string code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Code {
      get { return code_ ?? CodeDefaultValue; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "code" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCode {
      get { return code_ != null; }
    }
    /// <summary>Clears the value of the "code" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCode() {
      code_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Language);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Language other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasCode) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasCode) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Language other) {
      if (other == null) {
        return;
      }
      if (other.HasCode) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Misc : pb::IMessage<Misc>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Misc> _parser = new pb::MessageParser<Misc>(() => new Misc());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Misc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc(Misc other) : this() {
      _hasBits0 = other._hasBits0;
      installerCachePath_ = other.installerCachePath_;
      screenshotRootPath_ = other.screenshotRootPath_;
      enableScreenshotsOnAchievements_ = other.enableScreenshotsOnAchievements_;
      gameInstallationPath_ = other.gameInstallationPath_;
      enableAutoWallPosts_ = other.enableAutoWallPosts_;
      saveScreenshotUncompressedCopy_ = other.saveScreenshotUncompressedCopy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Misc Clone() {
      return new Misc(this);
    }

    /// <summary>Field number for the "installer_cache_path" field.</summary>
    public const int InstallerCachePathFieldNumber = 1;
    private readonly static string InstallerCachePathDefaultValue = "";

    private string installerCachePath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstallerCachePath {
      get { return installerCachePath_ ?? InstallerCachePathDefaultValue; }
      set {
        installerCachePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "installer_cache_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstallerCachePath {
      get { return installerCachePath_ != null; }
    }
    /// <summary>Clears the value of the "installer_cache_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstallerCachePath() {
      installerCachePath_ = null;
    }

    /// <summary>Field number for the "screenshot_root_path" field.</summary>
    public const int ScreenshotRootPathFieldNumber = 2;
    private readonly static string ScreenshotRootPathDefaultValue = "";

    private string screenshotRootPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ScreenshotRootPath {
      get { return screenshotRootPath_ ?? ScreenshotRootPathDefaultValue; }
      set {
        screenshotRootPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "screenshot_root_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScreenshotRootPath {
      get { return screenshotRootPath_ != null; }
    }
    /// <summary>Clears the value of the "screenshot_root_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScreenshotRootPath() {
      screenshotRootPath_ = null;
    }

    /// <summary>Field number for the "enable_screenshots_on_achievements" field.</summary>
    public const int EnableScreenshotsOnAchievementsFieldNumber = 3;
    private readonly static bool EnableScreenshotsOnAchievementsDefaultValue = false;

    private bool enableScreenshotsOnAchievements_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableScreenshotsOnAchievements {
      get { if ((_hasBits0 & 1) != 0) { return enableScreenshotsOnAchievements_; } else { return EnableScreenshotsOnAchievementsDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enableScreenshotsOnAchievements_ = value;
      }
    }
    /// <summary>Gets whether the "enable_screenshots_on_achievements" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableScreenshotsOnAchievements {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enable_screenshots_on_achievements" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableScreenshotsOnAchievements() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_installation_path" field.</summary>
    public const int GameInstallationPathFieldNumber = 4;
    private readonly static string GameInstallationPathDefaultValue = "";

    private string gameInstallationPath_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameInstallationPath {
      get { return gameInstallationPath_ ?? GameInstallationPathDefaultValue; }
      set {
        gameInstallationPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_installation_path" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameInstallationPath {
      get { return gameInstallationPath_ != null; }
    }
    /// <summary>Clears the value of the "game_installation_path" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameInstallationPath() {
      gameInstallationPath_ = null;
    }

    /// <summary>Field number for the "enable_auto_wall_posts" field.</summary>
    public const int EnableAutoWallPostsFieldNumber = 5;
    private readonly static bool EnableAutoWallPostsDefaultValue = true;

    private bool enableAutoWallPosts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnableAutoWallPosts {
      get { if ((_hasBits0 & 2) != 0) { return enableAutoWallPosts_; } else { return EnableAutoWallPostsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        enableAutoWallPosts_ = value;
      }
    }
    /// <summary>Gets whether the "enable_auto_wall_posts" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnableAutoWallPosts {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "enable_auto_wall_posts" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnableAutoWallPosts() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "save_screenshot_uncompressed_copy" field.</summary>
    public const int SaveScreenshotUncompressedCopyFieldNumber = 6;
    private readonly static bool SaveScreenshotUncompressedCopyDefaultValue = false;

    private bool saveScreenshotUncompressedCopy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SaveScreenshotUncompressedCopy {
      get { if ((_hasBits0 & 4) != 0) { return saveScreenshotUncompressedCopy_; } else { return SaveScreenshotUncompressedCopyDefaultValue; } }
      set {
        _hasBits0 |= 4;
        saveScreenshotUncompressedCopy_ = value;
      }
    }
    /// <summary>Gets whether the "save_screenshot_uncompressed_copy" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSaveScreenshotUncompressedCopy {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "save_screenshot_uncompressed_copy" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSaveScreenshotUncompressedCopy() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Misc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Misc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstallerCachePath != other.InstallerCachePath) return false;
      if (ScreenshotRootPath != other.ScreenshotRootPath) return false;
      if (EnableScreenshotsOnAchievements != other.EnableScreenshotsOnAchievements) return false;
      if (GameInstallationPath != other.GameInstallationPath) return false;
      if (EnableAutoWallPosts != other.EnableAutoWallPosts) return false;
      if (SaveScreenshotUncompressedCopy != other.SaveScreenshotUncompressedCopy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInstallerCachePath) hash ^= InstallerCachePath.GetHashCode();
      if (HasScreenshotRootPath) hash ^= ScreenshotRootPath.GetHashCode();
      if (HasEnableScreenshotsOnAchievements) hash ^= EnableScreenshotsOnAchievements.GetHashCode();
      if (HasGameInstallationPath) hash ^= GameInstallationPath.GetHashCode();
      if (HasEnableAutoWallPosts) hash ^= EnableAutoWallPosts.GetHashCode();
      if (HasSaveScreenshotUncompressedCopy) hash ^= SaveScreenshotUncompressedCopy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInstallerCachePath) {
        output.WriteRawTag(10);
        output.WriteString(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        output.WriteRawTag(18);
        output.WriteString(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        output.WriteRawTag(24);
        output.WriteBool(EnableScreenshotsOnAchievements);
      }
      if (HasGameInstallationPath) {
        output.WriteRawTag(34);
        output.WriteString(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        output.WriteRawTag(40);
        output.WriteBool(EnableAutoWallPosts);
      }
      if (HasSaveScreenshotUncompressedCopy) {
        output.WriteRawTag(48);
        output.WriteBool(SaveScreenshotUncompressedCopy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInstallerCachePath) {
        output.WriteRawTag(10);
        output.WriteString(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        output.WriteRawTag(18);
        output.WriteString(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        output.WriteRawTag(24);
        output.WriteBool(EnableScreenshotsOnAchievements);
      }
      if (HasGameInstallationPath) {
        output.WriteRawTag(34);
        output.WriteString(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        output.WriteRawTag(40);
        output.WriteBool(EnableAutoWallPosts);
      }
      if (HasSaveScreenshotUncompressedCopy) {
        output.WriteRawTag(48);
        output.WriteBool(SaveScreenshotUncompressedCopy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInstallerCachePath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstallerCachePath);
      }
      if (HasScreenshotRootPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ScreenshotRootPath);
      }
      if (HasEnableScreenshotsOnAchievements) {
        size += 1 + 1;
      }
      if (HasGameInstallationPath) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameInstallationPath);
      }
      if (HasEnableAutoWallPosts) {
        size += 1 + 1;
      }
      if (HasSaveScreenshotUncompressedCopy) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Misc other) {
      if (other == null) {
        return;
      }
      if (other.HasInstallerCachePath) {
        InstallerCachePath = other.InstallerCachePath;
      }
      if (other.HasScreenshotRootPath) {
        ScreenshotRootPath = other.ScreenshotRootPath;
      }
      if (other.HasEnableScreenshotsOnAchievements) {
        EnableScreenshotsOnAchievements = other.EnableScreenshotsOnAchievements;
      }
      if (other.HasGameInstallationPath) {
        GameInstallationPath = other.GameInstallationPath;
      }
      if (other.HasEnableAutoWallPosts) {
        EnableAutoWallPosts = other.EnableAutoWallPosts;
      }
      if (other.HasSaveScreenshotUncompressedCopy) {
        SaveScreenshotUncompressedCopy = other.SaveScreenshotUncompressedCopy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstallerCachePath = input.ReadString();
            break;
          }
          case 18: {
            ScreenshotRootPath = input.ReadString();
            break;
          }
          case 24: {
            EnableScreenshotsOnAchievements = input.ReadBool();
            break;
          }
          case 34: {
            GameInstallationPath = input.ReadString();
            break;
          }
          case 40: {
            EnableAutoWallPosts = input.ReadBool();
            break;
          }
          case 48: {
            SaveScreenshotUncompressedCopy = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstallerCachePath = input.ReadString();
            break;
          }
          case 18: {
            ScreenshotRootPath = input.ReadString();
            break;
          }
          case 24: {
            EnableScreenshotsOnAchievements = input.ReadBool();
            break;
          }
          case 34: {
            GameInstallationPath = input.ReadString();
            break;
          }
          case 40: {
            EnableAutoWallPosts = input.ReadBool();
            break;
          }
          case 48: {
            SaveScreenshotUncompressedCopy = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      _hasBits0 = other._hasBits0;
      left_ = other.left_;
      top_ = other.top_;
      width_ = other.width_;
      height_ = other.height_;
      maximized_ = other.maximized_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 1;
    private readonly static uint LeftDefaultValue = 0;

    private uint left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Left {
      get { if ((_hasBits0 & 1) != 0) { return left_; } else { return LeftDefaultValue; } }
      set {
        _hasBits0 |= 1;
        left_ = value;
      }
    }
    /// <summary>Gets whether the "left" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLeft {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "left" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLeft() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 2;
    private readonly static uint TopDefaultValue = 0;

    private uint top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Top {
      get { if ((_hasBits0 & 2) != 0) { return top_; } else { return TopDefaultValue; } }
      set {
        _hasBits0 |= 2;
        top_ = value;
      }
    }
    /// <summary>Gets whether the "top" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTop {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "top" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTop() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private readonly static uint WidthDefaultValue = 0;

    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Width {
      get { if ((_hasBits0 & 4) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 4;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private readonly static uint HeightDefaultValue = 0;

    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Height {
      get { if ((_hasBits0 & 8) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 8;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "maximized" field.</summary>
    public const int MaximizedFieldNumber = 5;
    private readonly static bool MaximizedDefaultValue = false;

    private bool maximized_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Maximized {
      get { if ((_hasBits0 & 16) != 0) { return maximized_; } else { return MaximizedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        maximized_ = value;
      }
    }
    /// <summary>Gets whether the "maximized" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMaximized {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "maximized" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaximized() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Left != other.Left) return false;
      if (Top != other.Top) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Maximized != other.Maximized) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLeft) hash ^= Left.GetHashCode();
      if (HasTop) hash ^= Top.GetHashCode();
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasMaximized) hash ^= Maximized.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteUInt32(Left);
      }
      if (HasTop) {
        output.WriteRawTag(16);
        output.WriteUInt32(Top);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasMaximized) {
        output.WriteRawTag(40);
        output.WriteBool(Maximized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLeft) {
        output.WriteRawTag(8);
        output.WriteUInt32(Left);
      }
      if (HasTop) {
        output.WriteRawTag(16);
        output.WriteUInt32(Top);
      }
      if (HasWidth) {
        output.WriteRawTag(24);
        output.WriteUInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(32);
        output.WriteUInt32(Height);
      }
      if (HasMaximized) {
        output.WriteRawTag(40);
        output.WriteBool(Maximized);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLeft) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Left);
      }
      if (HasTop) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Top);
      }
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (HasMaximized) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.HasLeft) {
        Left = other.Left;
      }
      if (other.HasTop) {
        Top = other.Top;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasMaximized) {
        Maximized = other.Maximized;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Left = input.ReadUInt32();
            break;
          }
          case 16: {
            Top = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Maximized = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Left = input.ReadUInt32();
            break;
          }
          case 16: {
            Top = input.ReadUInt32();
            break;
          }
          case 24: {
            Width = input.ReadUInt32();
            break;
          }
          case 32: {
            Height = input.ReadUInt32();
            break;
          }
          case 40: {
            Maximized = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ModelessPositions : pb::IMessage<ModelessPositions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ModelessPositions> _parser = new pb::MessageParser<ModelessPositions>(() => new ModelessPositions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ModelessPositions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions(ModelessPositions other) : this() {
      friendsWindow_ = other.friendsWindow_ != null ? other.friendsWindow_.Clone() : null;
      conversationsWindow_ = other.conversationsWindow_ != null ? other.conversationsWindow_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ModelessPositions Clone() {
      return new ModelessPositions(this);
    }

    /// <summary>Field number for the "friends_window" field.</summary>
    public const int FriendsWindowFieldNumber = 1;
    private global::Uplay.Settings.Position friendsWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Position FriendsWindow {
      get { return friendsWindow_; }
      set {
        friendsWindow_ = value;
      }
    }

    /// <summary>Field number for the "conversations_window" field.</summary>
    public const int ConversationsWindowFieldNumber = 2;
    private global::Uplay.Settings.Position conversationsWindow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Position ConversationsWindow {
      get { return conversationsWindow_; }
      set {
        conversationsWindow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ModelessPositions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ModelessPositions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FriendsWindow, other.FriendsWindow)) return false;
      if (!object.Equals(ConversationsWindow, other.ConversationsWindow)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (friendsWindow_ != null) hash ^= FriendsWindow.GetHashCode();
      if (conversationsWindow_ != null) hash ^= ConversationsWindow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (friendsWindow_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationsWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (friendsWindow_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConversationsWindow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (friendsWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FriendsWindow);
      }
      if (conversationsWindow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConversationsWindow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ModelessPositions other) {
      if (other == null) {
        return;
      }
      if (other.friendsWindow_ != null) {
        if (friendsWindow_ == null) {
          FriendsWindow = new global::Uplay.Settings.Position();
        }
        FriendsWindow.MergeFrom(other.FriendsWindow);
      }
      if (other.conversationsWindow_ != null) {
        if (conversationsWindow_ == null) {
          ConversationsWindow = new global::Uplay.Settings.Position();
        }
        ConversationsWindow.MergeFrom(other.ConversationsWindow);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (friendsWindow_ == null) {
              FriendsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(FriendsWindow);
            break;
          }
          case 18: {
            if (conversationsWindow_ == null) {
              ConversationsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(ConversationsWindow);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (friendsWindow_ == null) {
              FriendsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(FriendsWindow);
            break;
          }
          case 18: {
            if (conversationsWindow_ == null) {
              ConversationsWindow = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(ConversationsWindow);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Notifications : pb::IMessage<Notifications>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Notifications> _parser = new pb::MessageParser<Notifications>(() => new Notifications());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Notifications> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notifications() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notifications(Notifications other) : this() {
      _hasBits0 = other._hasBits0;
      inGameEnabled_ = other.inGameEnabled_;
      permanentInGameEnabled_ = other.permanentInGameEnabled_;
      inGameFriendOnlineEnabled_ = other.inGameFriendOnlineEnabled_;
      sysTrayEnabled_ = other.sysTrayEnabled_;
      desktopFriendRequestEnabled_ = other.desktopFriendRequestEnabled_;
      desktopFriendOnlineEnabled_ = other.desktopFriendOnlineEnabled_;
      desktopChatEnabled_ = other.desktopChatEnabled_;
      desktopFriendGameEnabled_ = other.desktopFriendGameEnabled_;
      desktopGameInviteEnabled_ = other.desktopGameInviteEnabled_;
      desktopPartyInviteEnabled_ = other.desktopPartyInviteEnabled_;
      desktopDownloadCompleteEnabled_ = other.desktopDownloadCompleteEnabled_;
      desktopGamePatchAvailableEnabled_ = other.desktopGamePatchAvailableEnabled_;
      desktopPlayAvailableEnabled_ = other.desktopPlayAvailableEnabled_;
      desktopGroupInviteEnabled_ = other.desktopGroupInviteEnabled_;
      desktopScreenshotsEnabled_ = other.desktopScreenshotsEnabled_;
      desktopAchievementsEnabled_ = other.desktopAchievementsEnabled_;
      desktopClubActionsEnabled_ = other.desktopClubActionsEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Notifications Clone() {
      return new Notifications(this);
    }

    /// <summary>Field number for the "inGameEnabled" field.</summary>
    public const int InGameEnabledFieldNumber = 1;
    private readonly static bool InGameEnabledDefaultValue = true;

    private bool inGameEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InGameEnabled {
      get { if ((_hasBits0 & 1) != 0) { return inGameEnabled_; } else { return InGameEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        inGameEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "inGameEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInGameEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "inGameEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInGameEnabled() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "permanentInGameEnabled" field.</summary>
    public const int PermanentInGameEnabledFieldNumber = 2;
    private readonly static bool PermanentInGameEnabledDefaultValue = true;

    private bool permanentInGameEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PermanentInGameEnabled {
      get { if ((_hasBits0 & 2) != 0) { return permanentInGameEnabled_; } else { return PermanentInGameEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2;
        permanentInGameEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "permanentInGameEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPermanentInGameEnabled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "permanentInGameEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPermanentInGameEnabled() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "inGameFriendOnlineEnabled" field.</summary>
    public const int InGameFriendOnlineEnabledFieldNumber = 3;
    private readonly static bool InGameFriendOnlineEnabledDefaultValue = true;

    private bool inGameFriendOnlineEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InGameFriendOnlineEnabled {
      get { if ((_hasBits0 & 4) != 0) { return inGameFriendOnlineEnabled_; } else { return InGameFriendOnlineEnabledDefaultValue; } }
      set {
        _hasBits0 |= 4;
        inGameFriendOnlineEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "inGameFriendOnlineEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInGameFriendOnlineEnabled {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "inGameFriendOnlineEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInGameFriendOnlineEnabled() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "sysTrayEnabled" field.</summary>
    public const int SysTrayEnabledFieldNumber = 4;
    private readonly static bool SysTrayEnabledDefaultValue = true;

    private bool sysTrayEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SysTrayEnabled {
      get { if ((_hasBits0 & 8) != 0) { return sysTrayEnabled_; } else { return SysTrayEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8;
        sysTrayEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "sysTrayEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSysTrayEnabled {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "sysTrayEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSysTrayEnabled() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "desktopFriendRequestEnabled" field.</summary>
    public const int DesktopFriendRequestEnabledFieldNumber = 5;
    private readonly static bool DesktopFriendRequestEnabledDefaultValue = true;

    private bool desktopFriendRequestEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopFriendRequestEnabled {
      get { if ((_hasBits0 & 16) != 0) { return desktopFriendRequestEnabled_; } else { return DesktopFriendRequestEnabledDefaultValue; } }
      set {
        _hasBits0 |= 16;
        desktopFriendRequestEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopFriendRequestEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopFriendRequestEnabled {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "desktopFriendRequestEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopFriendRequestEnabled() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "desktopFriendOnlineEnabled" field.</summary>
    public const int DesktopFriendOnlineEnabledFieldNumber = 6;
    private readonly static bool DesktopFriendOnlineEnabledDefaultValue = true;

    private bool desktopFriendOnlineEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopFriendOnlineEnabled {
      get { if ((_hasBits0 & 32) != 0) { return desktopFriendOnlineEnabled_; } else { return DesktopFriendOnlineEnabledDefaultValue; } }
      set {
        _hasBits0 |= 32;
        desktopFriendOnlineEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopFriendOnlineEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopFriendOnlineEnabled {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "desktopFriendOnlineEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopFriendOnlineEnabled() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "desktopChatEnabled" field.</summary>
    public const int DesktopChatEnabledFieldNumber = 7;
    private readonly static bool DesktopChatEnabledDefaultValue = true;

    private bool desktopChatEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopChatEnabled {
      get { if ((_hasBits0 & 64) != 0) { return desktopChatEnabled_; } else { return DesktopChatEnabledDefaultValue; } }
      set {
        _hasBits0 |= 64;
        desktopChatEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopChatEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopChatEnabled {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "desktopChatEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopChatEnabled() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "desktopFriendGameEnabled" field.</summary>
    public const int DesktopFriendGameEnabledFieldNumber = 8;
    private readonly static bool DesktopFriendGameEnabledDefaultValue = true;

    private bool desktopFriendGameEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopFriendGameEnabled {
      get { if ((_hasBits0 & 128) != 0) { return desktopFriendGameEnabled_; } else { return DesktopFriendGameEnabledDefaultValue; } }
      set {
        _hasBits0 |= 128;
        desktopFriendGameEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopFriendGameEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopFriendGameEnabled {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "desktopFriendGameEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopFriendGameEnabled() {
      _hasBits0 &= ~128;
    }

    /// <summary>Field number for the "desktopGameInviteEnabled" field.</summary>
    public const int DesktopGameInviteEnabledFieldNumber = 9;
    private readonly static bool DesktopGameInviteEnabledDefaultValue = true;

    private bool desktopGameInviteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopGameInviteEnabled {
      get { if ((_hasBits0 & 256) != 0) { return desktopGameInviteEnabled_; } else { return DesktopGameInviteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 256;
        desktopGameInviteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopGameInviteEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopGameInviteEnabled {
      get { return (_hasBits0 & 256) != 0; }
    }
    /// <summary>Clears the value of the "desktopGameInviteEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopGameInviteEnabled() {
      _hasBits0 &= ~256;
    }

    /// <summary>Field number for the "desktopPartyInviteEnabled" field.</summary>
    public const int DesktopPartyInviteEnabledFieldNumber = 10;
    private readonly static bool DesktopPartyInviteEnabledDefaultValue = true;

    private bool desktopPartyInviteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopPartyInviteEnabled {
      get { if ((_hasBits0 & 512) != 0) { return desktopPartyInviteEnabled_; } else { return DesktopPartyInviteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 512;
        desktopPartyInviteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopPartyInviteEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopPartyInviteEnabled {
      get { return (_hasBits0 & 512) != 0; }
    }
    /// <summary>Clears the value of the "desktopPartyInviteEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopPartyInviteEnabled() {
      _hasBits0 &= ~512;
    }

    /// <summary>Field number for the "desktopDownloadCompleteEnabled" field.</summary>
    public const int DesktopDownloadCompleteEnabledFieldNumber = 11;
    private readonly static bool DesktopDownloadCompleteEnabledDefaultValue = true;

    private bool desktopDownloadCompleteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopDownloadCompleteEnabled {
      get { if ((_hasBits0 & 1024) != 0) { return desktopDownloadCompleteEnabled_; } else { return DesktopDownloadCompleteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1024;
        desktopDownloadCompleteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopDownloadCompleteEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopDownloadCompleteEnabled {
      get { return (_hasBits0 & 1024) != 0; }
    }
    /// <summary>Clears the value of the "desktopDownloadCompleteEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopDownloadCompleteEnabled() {
      _hasBits0 &= ~1024;
    }

    /// <summary>Field number for the "desktopGamePatchAvailableEnabled" field.</summary>
    public const int DesktopGamePatchAvailableEnabledFieldNumber = 12;
    private readonly static bool DesktopGamePatchAvailableEnabledDefaultValue = true;

    private bool desktopGamePatchAvailableEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopGamePatchAvailableEnabled {
      get { if ((_hasBits0 & 2048) != 0) { return desktopGamePatchAvailableEnabled_; } else { return DesktopGamePatchAvailableEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2048;
        desktopGamePatchAvailableEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopGamePatchAvailableEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopGamePatchAvailableEnabled {
      get { return (_hasBits0 & 2048) != 0; }
    }
    /// <summary>Clears the value of the "desktopGamePatchAvailableEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopGamePatchAvailableEnabled() {
      _hasBits0 &= ~2048;
    }

    /// <summary>Field number for the "desktopPlayAvailableEnabled" field.</summary>
    public const int DesktopPlayAvailableEnabledFieldNumber = 13;
    private readonly static bool DesktopPlayAvailableEnabledDefaultValue = true;

    private bool desktopPlayAvailableEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopPlayAvailableEnabled {
      get { if ((_hasBits0 & 4096) != 0) { return desktopPlayAvailableEnabled_; } else { return DesktopPlayAvailableEnabledDefaultValue; } }
      set {
        _hasBits0 |= 4096;
        desktopPlayAvailableEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopPlayAvailableEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopPlayAvailableEnabled {
      get { return (_hasBits0 & 4096) != 0; }
    }
    /// <summary>Clears the value of the "desktopPlayAvailableEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopPlayAvailableEnabled() {
      _hasBits0 &= ~4096;
    }

    /// <summary>Field number for the "desktopGroupInviteEnabled" field.</summary>
    public const int DesktopGroupInviteEnabledFieldNumber = 14;
    private readonly static bool DesktopGroupInviteEnabledDefaultValue = true;

    private bool desktopGroupInviteEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopGroupInviteEnabled {
      get { if ((_hasBits0 & 8192) != 0) { return desktopGroupInviteEnabled_; } else { return DesktopGroupInviteEnabledDefaultValue; } }
      set {
        _hasBits0 |= 8192;
        desktopGroupInviteEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopGroupInviteEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopGroupInviteEnabled {
      get { return (_hasBits0 & 8192) != 0; }
    }
    /// <summary>Clears the value of the "desktopGroupInviteEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopGroupInviteEnabled() {
      _hasBits0 &= ~8192;
    }

    /// <summary>Field number for the "desktopScreenshotsEnabled" field.</summary>
    public const int DesktopScreenshotsEnabledFieldNumber = 15;
    private readonly static bool DesktopScreenshotsEnabledDefaultValue = true;

    private bool desktopScreenshotsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopScreenshotsEnabled {
      get { if ((_hasBits0 & 16384) != 0) { return desktopScreenshotsEnabled_; } else { return DesktopScreenshotsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 16384;
        desktopScreenshotsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopScreenshotsEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopScreenshotsEnabled {
      get { return (_hasBits0 & 16384) != 0; }
    }
    /// <summary>Clears the value of the "desktopScreenshotsEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopScreenshotsEnabled() {
      _hasBits0 &= ~16384;
    }

    /// <summary>Field number for the "desktopAchievementsEnabled" field.</summary>
    public const int DesktopAchievementsEnabledFieldNumber = 16;
    private readonly static bool DesktopAchievementsEnabledDefaultValue = true;

    private bool desktopAchievementsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopAchievementsEnabled {
      get { if ((_hasBits0 & 32768) != 0) { return desktopAchievementsEnabled_; } else { return DesktopAchievementsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 32768;
        desktopAchievementsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopAchievementsEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopAchievementsEnabled {
      get { return (_hasBits0 & 32768) != 0; }
    }
    /// <summary>Clears the value of the "desktopAchievementsEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopAchievementsEnabled() {
      _hasBits0 &= ~32768;
    }

    /// <summary>Field number for the "desktopClubActionsEnabled" field.</summary>
    public const int DesktopClubActionsEnabledFieldNumber = 17;
    private readonly static bool DesktopClubActionsEnabledDefaultValue = false;

    private bool desktopClubActionsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DesktopClubActionsEnabled {
      get { if ((_hasBits0 & 65536) != 0) { return desktopClubActionsEnabled_; } else { return DesktopClubActionsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 65536;
        desktopClubActionsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "desktopClubActionsEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDesktopClubActionsEnabled {
      get { return (_hasBits0 & 65536) != 0; }
    }
    /// <summary>Clears the value of the "desktopClubActionsEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDesktopClubActionsEnabled() {
      _hasBits0 &= ~65536;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Notifications);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Notifications other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InGameEnabled != other.InGameEnabled) return false;
      if (PermanentInGameEnabled != other.PermanentInGameEnabled) return false;
      if (InGameFriendOnlineEnabled != other.InGameFriendOnlineEnabled) return false;
      if (SysTrayEnabled != other.SysTrayEnabled) return false;
      if (DesktopFriendRequestEnabled != other.DesktopFriendRequestEnabled) return false;
      if (DesktopFriendOnlineEnabled != other.DesktopFriendOnlineEnabled) return false;
      if (DesktopChatEnabled != other.DesktopChatEnabled) return false;
      if (DesktopFriendGameEnabled != other.DesktopFriendGameEnabled) return false;
      if (DesktopGameInviteEnabled != other.DesktopGameInviteEnabled) return false;
      if (DesktopPartyInviteEnabled != other.DesktopPartyInviteEnabled) return false;
      if (DesktopDownloadCompleteEnabled != other.DesktopDownloadCompleteEnabled) return false;
      if (DesktopGamePatchAvailableEnabled != other.DesktopGamePatchAvailableEnabled) return false;
      if (DesktopPlayAvailableEnabled != other.DesktopPlayAvailableEnabled) return false;
      if (DesktopGroupInviteEnabled != other.DesktopGroupInviteEnabled) return false;
      if (DesktopScreenshotsEnabled != other.DesktopScreenshotsEnabled) return false;
      if (DesktopAchievementsEnabled != other.DesktopAchievementsEnabled) return false;
      if (DesktopClubActionsEnabled != other.DesktopClubActionsEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasInGameEnabled) hash ^= InGameEnabled.GetHashCode();
      if (HasPermanentInGameEnabled) hash ^= PermanentInGameEnabled.GetHashCode();
      if (HasInGameFriendOnlineEnabled) hash ^= InGameFriendOnlineEnabled.GetHashCode();
      if (HasSysTrayEnabled) hash ^= SysTrayEnabled.GetHashCode();
      if (HasDesktopFriendRequestEnabled) hash ^= DesktopFriendRequestEnabled.GetHashCode();
      if (HasDesktopFriendOnlineEnabled) hash ^= DesktopFriendOnlineEnabled.GetHashCode();
      if (HasDesktopChatEnabled) hash ^= DesktopChatEnabled.GetHashCode();
      if (HasDesktopFriendGameEnabled) hash ^= DesktopFriendGameEnabled.GetHashCode();
      if (HasDesktopGameInviteEnabled) hash ^= DesktopGameInviteEnabled.GetHashCode();
      if (HasDesktopPartyInviteEnabled) hash ^= DesktopPartyInviteEnabled.GetHashCode();
      if (HasDesktopDownloadCompleteEnabled) hash ^= DesktopDownloadCompleteEnabled.GetHashCode();
      if (HasDesktopGamePatchAvailableEnabled) hash ^= DesktopGamePatchAvailableEnabled.GetHashCode();
      if (HasDesktopPlayAvailableEnabled) hash ^= DesktopPlayAvailableEnabled.GetHashCode();
      if (HasDesktopGroupInviteEnabled) hash ^= DesktopGroupInviteEnabled.GetHashCode();
      if (HasDesktopScreenshotsEnabled) hash ^= DesktopScreenshotsEnabled.GetHashCode();
      if (HasDesktopAchievementsEnabled) hash ^= DesktopAchievementsEnabled.GetHashCode();
      if (HasDesktopClubActionsEnabled) hash ^= DesktopClubActionsEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasInGameEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(InGameEnabled);
      }
      if (HasPermanentInGameEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(PermanentInGameEnabled);
      }
      if (HasInGameFriendOnlineEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(InGameFriendOnlineEnabled);
      }
      if (HasSysTrayEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(SysTrayEnabled);
      }
      if (HasDesktopFriendRequestEnabled) {
        output.WriteRawTag(40);
        output.WriteBool(DesktopFriendRequestEnabled);
      }
      if (HasDesktopFriendOnlineEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(DesktopFriendOnlineEnabled);
      }
      if (HasDesktopChatEnabled) {
        output.WriteRawTag(56);
        output.WriteBool(DesktopChatEnabled);
      }
      if (HasDesktopFriendGameEnabled) {
        output.WriteRawTag(64);
        output.WriteBool(DesktopFriendGameEnabled);
      }
      if (HasDesktopGameInviteEnabled) {
        output.WriteRawTag(72);
        output.WriteBool(DesktopGameInviteEnabled);
      }
      if (HasDesktopPartyInviteEnabled) {
        output.WriteRawTag(80);
        output.WriteBool(DesktopPartyInviteEnabled);
      }
      if (HasDesktopDownloadCompleteEnabled) {
        output.WriteRawTag(88);
        output.WriteBool(DesktopDownloadCompleteEnabled);
      }
      if (HasDesktopGamePatchAvailableEnabled) {
        output.WriteRawTag(96);
        output.WriteBool(DesktopGamePatchAvailableEnabled);
      }
      if (HasDesktopPlayAvailableEnabled) {
        output.WriteRawTag(104);
        output.WriteBool(DesktopPlayAvailableEnabled);
      }
      if (HasDesktopGroupInviteEnabled) {
        output.WriteRawTag(112);
        output.WriteBool(DesktopGroupInviteEnabled);
      }
      if (HasDesktopScreenshotsEnabled) {
        output.WriteRawTag(120);
        output.WriteBool(DesktopScreenshotsEnabled);
      }
      if (HasDesktopAchievementsEnabled) {
        output.WriteRawTag(128, 1);
        output.WriteBool(DesktopAchievementsEnabled);
      }
      if (HasDesktopClubActionsEnabled) {
        output.WriteRawTag(136, 1);
        output.WriteBool(DesktopClubActionsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasInGameEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(InGameEnabled);
      }
      if (HasPermanentInGameEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(PermanentInGameEnabled);
      }
      if (HasInGameFriendOnlineEnabled) {
        output.WriteRawTag(24);
        output.WriteBool(InGameFriendOnlineEnabled);
      }
      if (HasSysTrayEnabled) {
        output.WriteRawTag(32);
        output.WriteBool(SysTrayEnabled);
      }
      if (HasDesktopFriendRequestEnabled) {
        output.WriteRawTag(40);
        output.WriteBool(DesktopFriendRequestEnabled);
      }
      if (HasDesktopFriendOnlineEnabled) {
        output.WriteRawTag(48);
        output.WriteBool(DesktopFriendOnlineEnabled);
      }
      if (HasDesktopChatEnabled) {
        output.WriteRawTag(56);
        output.WriteBool(DesktopChatEnabled);
      }
      if (HasDesktopFriendGameEnabled) {
        output.WriteRawTag(64);
        output.WriteBool(DesktopFriendGameEnabled);
      }
      if (HasDesktopGameInviteEnabled) {
        output.WriteRawTag(72);
        output.WriteBool(DesktopGameInviteEnabled);
      }
      if (HasDesktopPartyInviteEnabled) {
        output.WriteRawTag(80);
        output.WriteBool(DesktopPartyInviteEnabled);
      }
      if (HasDesktopDownloadCompleteEnabled) {
        output.WriteRawTag(88);
        output.WriteBool(DesktopDownloadCompleteEnabled);
      }
      if (HasDesktopGamePatchAvailableEnabled) {
        output.WriteRawTag(96);
        output.WriteBool(DesktopGamePatchAvailableEnabled);
      }
      if (HasDesktopPlayAvailableEnabled) {
        output.WriteRawTag(104);
        output.WriteBool(DesktopPlayAvailableEnabled);
      }
      if (HasDesktopGroupInviteEnabled) {
        output.WriteRawTag(112);
        output.WriteBool(DesktopGroupInviteEnabled);
      }
      if (HasDesktopScreenshotsEnabled) {
        output.WriteRawTag(120);
        output.WriteBool(DesktopScreenshotsEnabled);
      }
      if (HasDesktopAchievementsEnabled) {
        output.WriteRawTag(128, 1);
        output.WriteBool(DesktopAchievementsEnabled);
      }
      if (HasDesktopClubActionsEnabled) {
        output.WriteRawTag(136, 1);
        output.WriteBool(DesktopClubActionsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasInGameEnabled) {
        size += 1 + 1;
      }
      if (HasPermanentInGameEnabled) {
        size += 1 + 1;
      }
      if (HasInGameFriendOnlineEnabled) {
        size += 1 + 1;
      }
      if (HasSysTrayEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopFriendRequestEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopFriendOnlineEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopChatEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopFriendGameEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopGameInviteEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopPartyInviteEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopDownloadCompleteEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopGamePatchAvailableEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopPlayAvailableEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopGroupInviteEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopScreenshotsEnabled) {
        size += 1 + 1;
      }
      if (HasDesktopAchievementsEnabled) {
        size += 2 + 1;
      }
      if (HasDesktopClubActionsEnabled) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Notifications other) {
      if (other == null) {
        return;
      }
      if (other.HasInGameEnabled) {
        InGameEnabled = other.InGameEnabled;
      }
      if (other.HasPermanentInGameEnabled) {
        PermanentInGameEnabled = other.PermanentInGameEnabled;
      }
      if (other.HasInGameFriendOnlineEnabled) {
        InGameFriendOnlineEnabled = other.InGameFriendOnlineEnabled;
      }
      if (other.HasSysTrayEnabled) {
        SysTrayEnabled = other.SysTrayEnabled;
      }
      if (other.HasDesktopFriendRequestEnabled) {
        DesktopFriendRequestEnabled = other.DesktopFriendRequestEnabled;
      }
      if (other.HasDesktopFriendOnlineEnabled) {
        DesktopFriendOnlineEnabled = other.DesktopFriendOnlineEnabled;
      }
      if (other.HasDesktopChatEnabled) {
        DesktopChatEnabled = other.DesktopChatEnabled;
      }
      if (other.HasDesktopFriendGameEnabled) {
        DesktopFriendGameEnabled = other.DesktopFriendGameEnabled;
      }
      if (other.HasDesktopGameInviteEnabled) {
        DesktopGameInviteEnabled = other.DesktopGameInviteEnabled;
      }
      if (other.HasDesktopPartyInviteEnabled) {
        DesktopPartyInviteEnabled = other.DesktopPartyInviteEnabled;
      }
      if (other.HasDesktopDownloadCompleteEnabled) {
        DesktopDownloadCompleteEnabled = other.DesktopDownloadCompleteEnabled;
      }
      if (other.HasDesktopGamePatchAvailableEnabled) {
        DesktopGamePatchAvailableEnabled = other.DesktopGamePatchAvailableEnabled;
      }
      if (other.HasDesktopPlayAvailableEnabled) {
        DesktopPlayAvailableEnabled = other.DesktopPlayAvailableEnabled;
      }
      if (other.HasDesktopGroupInviteEnabled) {
        DesktopGroupInviteEnabled = other.DesktopGroupInviteEnabled;
      }
      if (other.HasDesktopScreenshotsEnabled) {
        DesktopScreenshotsEnabled = other.DesktopScreenshotsEnabled;
      }
      if (other.HasDesktopAchievementsEnabled) {
        DesktopAchievementsEnabled = other.DesktopAchievementsEnabled;
      }
      if (other.HasDesktopClubActionsEnabled) {
        DesktopClubActionsEnabled = other.DesktopClubActionsEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InGameEnabled = input.ReadBool();
            break;
          }
          case 16: {
            PermanentInGameEnabled = input.ReadBool();
            break;
          }
          case 24: {
            InGameFriendOnlineEnabled = input.ReadBool();
            break;
          }
          case 32: {
            SysTrayEnabled = input.ReadBool();
            break;
          }
          case 40: {
            DesktopFriendRequestEnabled = input.ReadBool();
            break;
          }
          case 48: {
            DesktopFriendOnlineEnabled = input.ReadBool();
            break;
          }
          case 56: {
            DesktopChatEnabled = input.ReadBool();
            break;
          }
          case 64: {
            DesktopFriendGameEnabled = input.ReadBool();
            break;
          }
          case 72: {
            DesktopGameInviteEnabled = input.ReadBool();
            break;
          }
          case 80: {
            DesktopPartyInviteEnabled = input.ReadBool();
            break;
          }
          case 88: {
            DesktopDownloadCompleteEnabled = input.ReadBool();
            break;
          }
          case 96: {
            DesktopGamePatchAvailableEnabled = input.ReadBool();
            break;
          }
          case 104: {
            DesktopPlayAvailableEnabled = input.ReadBool();
            break;
          }
          case 112: {
            DesktopGroupInviteEnabled = input.ReadBool();
            break;
          }
          case 120: {
            DesktopScreenshotsEnabled = input.ReadBool();
            break;
          }
          case 128: {
            DesktopAchievementsEnabled = input.ReadBool();
            break;
          }
          case 136: {
            DesktopClubActionsEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            InGameEnabled = input.ReadBool();
            break;
          }
          case 16: {
            PermanentInGameEnabled = input.ReadBool();
            break;
          }
          case 24: {
            InGameFriendOnlineEnabled = input.ReadBool();
            break;
          }
          case 32: {
            SysTrayEnabled = input.ReadBool();
            break;
          }
          case 40: {
            DesktopFriendRequestEnabled = input.ReadBool();
            break;
          }
          case 48: {
            DesktopFriendOnlineEnabled = input.ReadBool();
            break;
          }
          case 56: {
            DesktopChatEnabled = input.ReadBool();
            break;
          }
          case 64: {
            DesktopFriendGameEnabled = input.ReadBool();
            break;
          }
          case 72: {
            DesktopGameInviteEnabled = input.ReadBool();
            break;
          }
          case 80: {
            DesktopPartyInviteEnabled = input.ReadBool();
            break;
          }
          case 88: {
            DesktopDownloadCompleteEnabled = input.ReadBool();
            break;
          }
          case 96: {
            DesktopGamePatchAvailableEnabled = input.ReadBool();
            break;
          }
          case 104: {
            DesktopPlayAvailableEnabled = input.ReadBool();
            break;
          }
          case 112: {
            DesktopGroupInviteEnabled = input.ReadBool();
            break;
          }
          case 120: {
            DesktopScreenshotsEnabled = input.ReadBool();
            break;
          }
          case 128: {
            DesktopAchievementsEnabled = input.ReadBool();
            break;
          }
          case 136: {
            DesktopClubActionsEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Masters : pb::IMessage<Masters>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Masters> _parser = new pb::MessageParser<Masters>(() => new Masters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Masters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters(Masters other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Masters Clone() {
      return new Masters(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private readonly static string UsernameDefaultValue = "";

    private string username_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Username {
      get { return username_ ?? UsernameDefaultValue; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "username" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasUsername {
      get { return username_ != null; }
    }
    /// <summary>Clears the value of the "username" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearUsername() {
      username_ = null;
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private readonly static string PasswordDefaultValue = "";

    private string password_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_ ?? PasswordDefaultValue; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPassword {
      get { return password_ != null; }
    }
    /// <summary>Clears the value of the "password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPassword() {
      password_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Masters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Masters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasUsername) hash ^= Username.GetHashCode();
      if (HasPassword) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasUsername) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (HasPassword) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasUsername) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (HasPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Masters other) {
      if (other == null) {
        return;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Hotkey : pb::IMessage<Hotkey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Hotkey> _parser = new pb::MessageParser<Hotkey>(() => new Hotkey());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Hotkey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey(Hotkey other) : this() {
      _hasBits0 = other._hasBits0;
      keyCode_ = other.keyCode_;
      altState_ = other.altState_;
      shiftState_ = other.shiftState_;
      controlState_ = other.controlState_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Hotkey Clone() {
      return new Hotkey(this);
    }

    /// <summary>Field number for the "keyCode" field.</summary>
    public const int KeyCodeFieldNumber = 1;
    private readonly static uint KeyCodeDefaultValue = 0;

    private uint keyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KeyCode {
      get { if ((_hasBits0 & 1) != 0) { return keyCode_; } else { return KeyCodeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        keyCode_ = value;
      }
    }
    /// <summary>Gets whether the "keyCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKeyCode {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "keyCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKeyCode() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "altState" field.</summary>
    public const int AltStateFieldNumber = 2;
    private readonly static bool AltStateDefaultValue = false;

    private bool altState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AltState {
      get { if ((_hasBits0 & 2) != 0) { return altState_; } else { return AltStateDefaultValue; } }
      set {
        _hasBits0 |= 2;
        altState_ = value;
      }
    }
    /// <summary>Gets whether the "altState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAltState {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "altState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAltState() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "shiftState" field.</summary>
    public const int ShiftStateFieldNumber = 3;
    private readonly static bool ShiftStateDefaultValue = false;

    private bool shiftState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ShiftState {
      get { if ((_hasBits0 & 4) != 0) { return shiftState_; } else { return ShiftStateDefaultValue; } }
      set {
        _hasBits0 |= 4;
        shiftState_ = value;
      }
    }
    /// <summary>Gets whether the "shiftState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasShiftState {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "shiftState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearShiftState() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "controlState" field.</summary>
    public const int ControlStateFieldNumber = 4;
    private readonly static bool ControlStateDefaultValue = false;

    private bool controlState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ControlState {
      get { if ((_hasBits0 & 8) != 0) { return controlState_; } else { return ControlStateDefaultValue; } }
      set {
        _hasBits0 |= 8;
        controlState_ = value;
      }
    }
    /// <summary>Gets whether the "controlState" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasControlState {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "controlState" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearControlState() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Hotkey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Hotkey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyCode != other.KeyCode) return false;
      if (AltState != other.AltState) return false;
      if (ShiftState != other.ShiftState) return false;
      if (ControlState != other.ControlState) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKeyCode) hash ^= KeyCode.GetHashCode();
      if (HasAltState) hash ^= AltState.GetHashCode();
      if (HasShiftState) hash ^= ShiftState.GetHashCode();
      if (HasControlState) hash ^= ControlState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKeyCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyCode);
      }
      if (HasAltState) {
        output.WriteRawTag(16);
        output.WriteBool(AltState);
      }
      if (HasShiftState) {
        output.WriteRawTag(24);
        output.WriteBool(ShiftState);
      }
      if (HasControlState) {
        output.WriteRawTag(32);
        output.WriteBool(ControlState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKeyCode) {
        output.WriteRawTag(8);
        output.WriteUInt32(KeyCode);
      }
      if (HasAltState) {
        output.WriteRawTag(16);
        output.WriteBool(AltState);
      }
      if (HasShiftState) {
        output.WriteRawTag(24);
        output.WriteBool(ShiftState);
      }
      if (HasControlState) {
        output.WriteRawTag(32);
        output.WriteBool(ControlState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKeyCode) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KeyCode);
      }
      if (HasAltState) {
        size += 1 + 1;
      }
      if (HasShiftState) {
        size += 1 + 1;
      }
      if (HasControlState) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Hotkey other) {
      if (other == null) {
        return;
      }
      if (other.HasKeyCode) {
        KeyCode = other.KeyCode;
      }
      if (other.HasAltState) {
        AltState = other.AltState;
      }
      if (other.HasShiftState) {
        ShiftState = other.ShiftState;
      }
      if (other.HasControlState) {
        ControlState = other.ControlState;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 16: {
            AltState = input.ReadBool();
            break;
          }
          case 24: {
            ShiftState = input.ReadBool();
            break;
          }
          case 32: {
            ControlState = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KeyCode = input.ReadUInt32();
            break;
          }
          case 16: {
            AltState = input.ReadBool();
            break;
          }
          case 24: {
            ShiftState = input.ReadBool();
            break;
          }
          case 32: {
            ControlState = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Downloads : pb::IMessage<Downloads>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Downloads> _parser = new pb::MessageParser<Downloads>(() => new Downloads());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Downloads> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads(Downloads other) : this() {
      _hasBits0 = other._hasBits0;
      limit_ = other.limit_;
      limitEnabled_ = other.limitEnabled_;
      pauseOnGameLaunch_ = other.pauseOnGameLaunch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Downloads Clone() {
      return new Downloads(this);
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 1;
    private readonly static ulong LimitDefaultValue = 10000000UL;

    private ulong limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Limit {
      get { if ((_hasBits0 & 1) != 0) { return limit_; } else { return LimitDefaultValue; } }
      set {
        _hasBits0 |= 1;
        limit_ = value;
      }
    }
    /// <summary>Gets whether the "limit" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimit {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "limit" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimit() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "limitEnabled" field.</summary>
    public const int LimitEnabledFieldNumber = 2;
    private readonly static bool LimitEnabledDefaultValue = false;

    private bool limitEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitEnabled {
      get { if ((_hasBits0 & 2) != 0) { return limitEnabled_; } else { return LimitEnabledDefaultValue; } }
      set {
        _hasBits0 |= 2;
        limitEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "limitEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLimitEnabled {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "limitEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLimitEnabled() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "pauseOnGameLaunch" field.</summary>
    public const int PauseOnGameLaunchFieldNumber = 3;
    private readonly static bool PauseOnGameLaunchDefaultValue = true;

    private bool pauseOnGameLaunch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PauseOnGameLaunch {
      get { if ((_hasBits0 & 4) != 0) { return pauseOnGameLaunch_; } else { return PauseOnGameLaunchDefaultValue; } }
      set {
        _hasBits0 |= 4;
        pauseOnGameLaunch_ = value;
      }
    }
    /// <summary>Gets whether the "pauseOnGameLaunch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPauseOnGameLaunch {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "pauseOnGameLaunch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPauseOnGameLaunch() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Downloads);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Downloads other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Limit != other.Limit) return false;
      if (LimitEnabled != other.LimitEnabled) return false;
      if (PauseOnGameLaunch != other.PauseOnGameLaunch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasLimit) hash ^= Limit.GetHashCode();
      if (HasLimitEnabled) hash ^= LimitEnabled.GetHashCode();
      if (HasPauseOnGameLaunch) hash ^= PauseOnGameLaunch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (HasLimitEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(LimitEnabled);
      }
      if (HasPauseOnGameLaunch) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnGameLaunch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasLimit) {
        output.WriteRawTag(8);
        output.WriteUInt64(Limit);
      }
      if (HasLimitEnabled) {
        output.WriteRawTag(16);
        output.WriteBool(LimitEnabled);
      }
      if (HasPauseOnGameLaunch) {
        output.WriteRawTag(24);
        output.WriteBool(PauseOnGameLaunch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasLimit) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Limit);
      }
      if (HasLimitEnabled) {
        size += 1 + 1;
      }
      if (HasPauseOnGameLaunch) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Downloads other) {
      if (other == null) {
        return;
      }
      if (other.HasLimit) {
        Limit = other.Limit;
      }
      if (other.HasLimitEnabled) {
        LimitEnabled = other.LimitEnabled;
      }
      if (other.HasPauseOnGameLaunch) {
        PauseOnGameLaunch = other.PauseOnGameLaunch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            LimitEnabled = input.ReadBool();
            break;
          }
          case 24: {
            PauseOnGameLaunch = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Limit = input.ReadUInt64();
            break;
          }
          case 16: {
            LimitEnabled = input.ReadBool();
            break;
          }
          case 24: {
            PauseOnGameLaunch = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Betas : pb::IMessage<Betas>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Betas> _parser = new pb::MessageParser<Betas>(() => new Betas());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Betas> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas(Betas other) : this() {
      _hasBits0 = other._hasBits0;
      optIn_ = other.optIn_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Betas Clone() {
      return new Betas(this);
    }

    /// <summary>Field number for the "optIn" field.</summary>
    public const int OptInFieldNumber = 1;
    private readonly static bool OptInDefaultValue = false;

    private bool optIn_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OptIn {
      get { if ((_hasBits0 & 1) != 0) { return optIn_; } else { return OptInDefaultValue; } }
      set {
        _hasBits0 |= 1;
        optIn_ = value;
      }
    }
    /// <summary>Gets whether the "optIn" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasOptIn {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "optIn" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearOptIn() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Betas);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Betas other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OptIn != other.OptIn) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasOptIn) hash ^= OptIn.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasOptIn) {
        output.WriteRawTag(8);
        output.WriteBool(OptIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasOptIn) {
        output.WriteRawTag(8);
        output.WriteBool(OptIn);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasOptIn) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Betas other) {
      if (other == null) {
        return;
      }
      if (other.HasOptIn) {
        OptIn = other.OptIn;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OptIn = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            OptIn = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AutoPatching : pb::IMessage<AutoPatching>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AutoPatching> _parser = new pb::MessageParser<AutoPatching>(() => new AutoPatching());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AutoPatching> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching(AutoPatching other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AutoPatching Clone() {
      return new AutoPatching(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AutoPatching);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AutoPatching other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AutoPatching other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Spotlight : pb::IMessage<Spotlight>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Spotlight> _parser = new pb::MessageParser<Spotlight>(() => new Spotlight());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Spotlight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight(Spotlight other) : this() {
      _hasBits0 = other._hasBits0;
      enabled_ = other.enabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Spotlight Clone() {
      return new Spotlight(this);
    }

    /// <summary>Field number for the "enabled" field.</summary>
    public const int EnabledFieldNumber = 1;
    private readonly static bool EnabledDefaultValue = true;

    private bool enabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Enabled {
      get { if ((_hasBits0 & 1) != 0) { return enabled_; } else { return EnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        enabled_ = value;
      }
    }
    /// <summary>Gets whether the "enabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "enabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Spotlight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Spotlight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Enabled != other.Enabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasEnabled) hash ^= Enabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(Enabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Spotlight other) {
      if (other == null) {
        return;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Enabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Conversations : pb::IMessage<Conversations>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Conversations> _parser = new pb::MessageParser<Conversations>(() => new Conversations());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Conversations> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations(Conversations other) : this() {
      _hasBits0 = other._hasBits0;
      taskbarTabsEnabled_ = other.taskbarTabsEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Conversations Clone() {
      return new Conversations(this);
    }

    /// <summary>Field number for the "taskbarTabsEnabled" field.</summary>
    public const int TaskbarTabsEnabledFieldNumber = 1;
    private readonly static bool TaskbarTabsEnabledDefaultValue = false;

    private bool taskbarTabsEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool TaskbarTabsEnabled {
      get { if ((_hasBits0 & 1) != 0) { return taskbarTabsEnabled_; } else { return TaskbarTabsEnabledDefaultValue; } }
      set {
        _hasBits0 |= 1;
        taskbarTabsEnabled_ = value;
      }
    }
    /// <summary>Gets whether the "taskbarTabsEnabled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTaskbarTabsEnabled {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "taskbarTabsEnabled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTaskbarTabsEnabled() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Conversations);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Conversations other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskbarTabsEnabled != other.TaskbarTabsEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTaskbarTabsEnabled) hash ^= TaskbarTabsEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTaskbarTabsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(TaskbarTabsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTaskbarTabsEnabled) {
        output.WriteRawTag(8);
        output.WriteBool(TaskbarTabsEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasTaskbarTabsEnabled) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Conversations other) {
      if (other == null) {
        return;
      }
      if (other.HasTaskbarTabsEnabled) {
        TaskbarTabsEnabled = other.TaskbarTabsEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TaskbarTabsEnabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TaskbarTabsEnabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Epic : pb::IMessage<Epic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Epic> _parser = new pb::MessageParser<Epic>(() => new Epic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Epic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic(Epic other) : this() {
      exchangeCode_ = other.exchangeCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Epic Clone() {
      return new Epic(this);
    }

    /// <summary>Field number for the "exchangeCode" field.</summary>
    public const int ExchangeCodeFieldNumber = 1;
    private readonly static string ExchangeCodeDefaultValue = "";

    private string exchangeCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ExchangeCode {
      get { return exchangeCode_ ?? ExchangeCodeDefaultValue; }
      set {
        exchangeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "exchangeCode" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasExchangeCode {
      get { return exchangeCode_ != null; }
    }
    /// <summary>Clears the value of the "exchangeCode" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearExchangeCode() {
      exchangeCode_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Epic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Epic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExchangeCode != other.ExchangeCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasExchangeCode) hash ^= ExchangeCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasExchangeCode) {
        output.WriteRawTag(10);
        output.WriteString(ExchangeCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasExchangeCode) {
        output.WriteRawTag(10);
        output.WriteString(ExchangeCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasExchangeCode) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExchangeCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Epic other) {
      if (other == null) {
        return;
      }
      if (other.HasExchangeCode) {
        ExchangeCode = other.ExchangeCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ExchangeCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ExchangeCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BrandedInstaller : pb::IMessage<BrandedInstaller>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BrandedInstaller> _parser = new pb::MessageParser<BrandedInstaller>(() => new BrandedInstaller());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BrandedInstaller> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller(BrandedInstaller other) : this() {
      pendingProtocol_ = other.pendingProtocol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandedInstaller Clone() {
      return new BrandedInstaller(this);
    }

    /// <summary>Field number for the "pending_protocol" field.</summary>
    public const int PendingProtocolFieldNumber = 1;
    private readonly static string PendingProtocolDefaultValue = "";

    private string pendingProtocol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PendingProtocol {
      get { return pendingProtocol_ ?? PendingProtocolDefaultValue; }
      set {
        pendingProtocol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "pending_protocol" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPendingProtocol {
      get { return pendingProtocol_ != null; }
    }
    /// <summary>Clears the value of the "pending_protocol" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPendingProtocol() {
      pendingProtocol_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BrandedInstaller);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BrandedInstaller other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PendingProtocol != other.PendingProtocol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasPendingProtocol) hash ^= PendingProtocol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasPendingProtocol) {
        output.WriteRawTag(10);
        output.WriteString(PendingProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasPendingProtocol) {
        output.WriteRawTag(10);
        output.WriteString(PendingProtocol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasPendingProtocol) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PendingProtocol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BrandedInstaller other) {
      if (other == null) {
        return;
      }
      if (other.HasPendingProtocol) {
        PendingProtocol = other.PendingProtocol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PendingProtocol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PendingProtocol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SharePlay : pb::IMessage<SharePlay>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SharePlay> _parser = new pb::MessageParser<SharePlay>(() => new SharePlay());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SharePlay> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay(SharePlay other) : this() {
      _hasBits0 = other._hasBits0;
      bitrate_ = other.bitrate_;
      displayOnboarding_ = other.displayOnboarding_;
      mouseAndKeyboardAccessAllowed_ = other.mouseAndKeyboardAccessAllowed_;
      gamepadAccessAllowed_ = other.gamepadAccessAllowed_;
      displayWizardTour_ = other.displayWizardTour_;
      lastTimeFeedBackWindowDisplayed_ = other.lastTimeFeedBackWindowDisplayed_;
      nbBuyGameRefused_ = other.nbBuyGameRefused_;
      nbFeedbackUnfilled_ = other.nbFeedbackUnfilled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SharePlay Clone() {
      return new SharePlay(this);
    }

    /// <summary>Field number for the "bitrate" field.</summary>
    public const int BitrateFieldNumber = 1;
    private readonly static uint BitrateDefaultValue = 20;

    private uint bitrate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Bitrate {
      get { if ((_hasBits0 & 1) != 0) { return bitrate_; } else { return BitrateDefaultValue; } }
      set {
        _hasBits0 |= 1;
        bitrate_ = value;
      }
    }
    /// <summary>Gets whether the "bitrate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasBitrate {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "bitrate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearBitrate() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "displayOnboarding" field.</summary>
    public const int DisplayOnboardingFieldNumber = 2;
    private readonly static bool DisplayOnboardingDefaultValue = true;

    private bool displayOnboarding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisplayOnboarding {
      get { if ((_hasBits0 & 2) != 0) { return displayOnboarding_; } else { return DisplayOnboardingDefaultValue; } }
      set {
        _hasBits0 |= 2;
        displayOnboarding_ = value;
      }
    }
    /// <summary>Gets whether the "displayOnboarding" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayOnboarding {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "displayOnboarding" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayOnboarding() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "mouseAndKeyboardAccessAllowed" field.</summary>
    public const int MouseAndKeyboardAccessAllowedFieldNumber = 3;
    private readonly static bool MouseAndKeyboardAccessAllowedDefaultValue = true;

    private bool mouseAndKeyboardAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MouseAndKeyboardAccessAllowed {
      get { if ((_hasBits0 & 4) != 0) { return mouseAndKeyboardAccessAllowed_; } else { return MouseAndKeyboardAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 4;
        mouseAndKeyboardAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "mouseAndKeyboardAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMouseAndKeyboardAccessAllowed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "mouseAndKeyboardAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMouseAndKeyboardAccessAllowed() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "gamepadAccessAllowed" field.</summary>
    public const int GamepadAccessAllowedFieldNumber = 4;
    private readonly static bool GamepadAccessAllowedDefaultValue = true;

    private bool gamepadAccessAllowed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GamepadAccessAllowed {
      get { if ((_hasBits0 & 8) != 0) { return gamepadAccessAllowed_; } else { return GamepadAccessAllowedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        gamepadAccessAllowed_ = value;
      }
    }
    /// <summary>Gets whether the "gamepadAccessAllowed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGamepadAccessAllowed {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "gamepadAccessAllowed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGamepadAccessAllowed() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "displayWizardTour" field.</summary>
    public const int DisplayWizardTourFieldNumber = 5;
    private readonly static bool DisplayWizardTourDefaultValue = true;

    private bool displayWizardTour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisplayWizardTour {
      get { if ((_hasBits0 & 16) != 0) { return displayWizardTour_; } else { return DisplayWizardTourDefaultValue; } }
      set {
        _hasBits0 |= 16;
        displayWizardTour_ = value;
      }
    }
    /// <summary>Gets whether the "displayWizardTour" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasDisplayWizardTour {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "displayWizardTour" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearDisplayWizardTour() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "lastTimeFeedBackWindowDisplayed" field.</summary>
    public const int LastTimeFeedBackWindowDisplayedFieldNumber = 6;
    private readonly static uint LastTimeFeedBackWindowDisplayedDefaultValue = 0;

    private uint lastTimeFeedBackWindowDisplayed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LastTimeFeedBackWindowDisplayed {
      get { if ((_hasBits0 & 32) != 0) { return lastTimeFeedBackWindowDisplayed_; } else { return LastTimeFeedBackWindowDisplayedDefaultValue; } }
      set {
        _hasBits0 |= 32;
        lastTimeFeedBackWindowDisplayed_ = value;
      }
    }
    /// <summary>Gets whether the "lastTimeFeedBackWindowDisplayed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLastTimeFeedBackWindowDisplayed {
      get { return (_hasBits0 & 32) != 0; }
    }
    /// <summary>Clears the value of the "lastTimeFeedBackWindowDisplayed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLastTimeFeedBackWindowDisplayed() {
      _hasBits0 &= ~32;
    }

    /// <summary>Field number for the "nbBuyGameRefused" field.</summary>
    public const int NbBuyGameRefusedFieldNumber = 7;
    private readonly static uint NbBuyGameRefusedDefaultValue = 0;

    private uint nbBuyGameRefused_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbBuyGameRefused {
      get { if ((_hasBits0 & 64) != 0) { return nbBuyGameRefused_; } else { return NbBuyGameRefusedDefaultValue; } }
      set {
        _hasBits0 |= 64;
        nbBuyGameRefused_ = value;
      }
    }
    /// <summary>Gets whether the "nbBuyGameRefused" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbBuyGameRefused {
      get { return (_hasBits0 & 64) != 0; }
    }
    /// <summary>Clears the value of the "nbBuyGameRefused" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbBuyGameRefused() {
      _hasBits0 &= ~64;
    }

    /// <summary>Field number for the "nbFeedbackUnfilled" field.</summary>
    public const int NbFeedbackUnfilledFieldNumber = 8;
    private readonly static uint NbFeedbackUnfilledDefaultValue = 0;

    private uint nbFeedbackUnfilled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NbFeedbackUnfilled {
      get { if ((_hasBits0 & 128) != 0) { return nbFeedbackUnfilled_; } else { return NbFeedbackUnfilledDefaultValue; } }
      set {
        _hasBits0 |= 128;
        nbFeedbackUnfilled_ = value;
      }
    }
    /// <summary>Gets whether the "nbFeedbackUnfilled" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasNbFeedbackUnfilled {
      get { return (_hasBits0 & 128) != 0; }
    }
    /// <summary>Clears the value of the "nbFeedbackUnfilled" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearNbFeedbackUnfilled() {
      _hasBits0 &= ~128;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SharePlay);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SharePlay other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bitrate != other.Bitrate) return false;
      if (DisplayOnboarding != other.DisplayOnboarding) return false;
      if (MouseAndKeyboardAccessAllowed != other.MouseAndKeyboardAccessAllowed) return false;
      if (GamepadAccessAllowed != other.GamepadAccessAllowed) return false;
      if (DisplayWizardTour != other.DisplayWizardTour) return false;
      if (LastTimeFeedBackWindowDisplayed != other.LastTimeFeedBackWindowDisplayed) return false;
      if (NbBuyGameRefused != other.NbBuyGameRefused) return false;
      if (NbFeedbackUnfilled != other.NbFeedbackUnfilled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasBitrate) hash ^= Bitrate.GetHashCode();
      if (HasDisplayOnboarding) hash ^= DisplayOnboarding.GetHashCode();
      if (HasMouseAndKeyboardAccessAllowed) hash ^= MouseAndKeyboardAccessAllowed.GetHashCode();
      if (HasGamepadAccessAllowed) hash ^= GamepadAccessAllowed.GetHashCode();
      if (HasDisplayWizardTour) hash ^= DisplayWizardTour.GetHashCode();
      if (HasLastTimeFeedBackWindowDisplayed) hash ^= LastTimeFeedBackWindowDisplayed.GetHashCode();
      if (HasNbBuyGameRefused) hash ^= NbBuyGameRefused.GetHashCode();
      if (HasNbFeedbackUnfilled) hash ^= NbFeedbackUnfilled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasDisplayOnboarding) {
        output.WriteRawTag(16);
        output.WriteBool(DisplayOnboarding);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(32);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasDisplayWizardTour) {
        output.WriteRawTag(40);
        output.WriteBool(DisplayWizardTour);
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        output.WriteRawTag(48);
        output.WriteUInt32(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        output.WriteRawTag(64);
        output.WriteUInt32(NbFeedbackUnfilled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasBitrate) {
        output.WriteRawTag(8);
        output.WriteUInt32(Bitrate);
      }
      if (HasDisplayOnboarding) {
        output.WriteRawTag(16);
        output.WriteBool(DisplayOnboarding);
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        output.WriteRawTag(24);
        output.WriteBool(MouseAndKeyboardAccessAllowed);
      }
      if (HasGamepadAccessAllowed) {
        output.WriteRawTag(32);
        output.WriteBool(GamepadAccessAllowed);
      }
      if (HasDisplayWizardTour) {
        output.WriteRawTag(40);
        output.WriteBool(DisplayWizardTour);
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        output.WriteRawTag(48);
        output.WriteUInt32(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        output.WriteRawTag(56);
        output.WriteUInt32(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        output.WriteRawTag(64);
        output.WriteUInt32(NbFeedbackUnfilled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasBitrate) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bitrate);
      }
      if (HasDisplayOnboarding) {
        size += 1 + 1;
      }
      if (HasMouseAndKeyboardAccessAllowed) {
        size += 1 + 1;
      }
      if (HasGamepadAccessAllowed) {
        size += 1 + 1;
      }
      if (HasDisplayWizardTour) {
        size += 1 + 1;
      }
      if (HasLastTimeFeedBackWindowDisplayed) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LastTimeFeedBackWindowDisplayed);
      }
      if (HasNbBuyGameRefused) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbBuyGameRefused);
      }
      if (HasNbFeedbackUnfilled) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbFeedbackUnfilled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SharePlay other) {
      if (other == null) {
        return;
      }
      if (other.HasBitrate) {
        Bitrate = other.Bitrate;
      }
      if (other.HasDisplayOnboarding) {
        DisplayOnboarding = other.DisplayOnboarding;
      }
      if (other.HasMouseAndKeyboardAccessAllowed) {
        MouseAndKeyboardAccessAllowed = other.MouseAndKeyboardAccessAllowed;
      }
      if (other.HasGamepadAccessAllowed) {
        GamepadAccessAllowed = other.GamepadAccessAllowed;
      }
      if (other.HasDisplayWizardTour) {
        DisplayWizardTour = other.DisplayWizardTour;
      }
      if (other.HasLastTimeFeedBackWindowDisplayed) {
        LastTimeFeedBackWindowDisplayed = other.LastTimeFeedBackWindowDisplayed;
      }
      if (other.HasNbBuyGameRefused) {
        NbBuyGameRefused = other.NbBuyGameRefused;
      }
      if (other.HasNbFeedbackUnfilled) {
        NbFeedbackUnfilled = other.NbFeedbackUnfilled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            DisplayOnboarding = input.ReadBool();
            break;
          }
          case 24: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 32: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 40: {
            DisplayWizardTour = input.ReadBool();
            break;
          }
          case 48: {
            LastTimeFeedBackWindowDisplayed = input.ReadUInt32();
            break;
          }
          case 56: {
            NbBuyGameRefused = input.ReadUInt32();
            break;
          }
          case 64: {
            NbFeedbackUnfilled = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bitrate = input.ReadUInt32();
            break;
          }
          case 16: {
            DisplayOnboarding = input.ReadBool();
            break;
          }
          case 24: {
            MouseAndKeyboardAccessAllowed = input.ReadBool();
            break;
          }
          case 32: {
            GamepadAccessAllowed = input.ReadBool();
            break;
          }
          case 40: {
            DisplayWizardTour = input.ReadBool();
            break;
          }
          case 48: {
            LastTimeFeedBackWindowDisplayed = input.ReadUInt32();
            break;
          }
          case 56: {
            NbBuyGameRefused = input.ReadUInt32();
            break;
          }
          case 64: {
            NbFeedbackUnfilled = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SettingsModel : pb::IMessage<SettingsModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SettingsModel> _parser = new pb::MessageParser<SettingsModel>(() => new SettingsModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SettingsModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uplay.Settings.SettingsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingsModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingsModel(SettingsModel other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      overlay_ = other.overlay_ != null ? other.overlay_.Clone() : null;
      language_ = other.language_ != null ? other.language_.Clone() : null;
      misc_ = other.misc_ != null ? other.misc_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      notifications_ = other.notifications_ != null ? other.notifications_.Clone() : null;
      masters_ = other.masters_ != null ? other.masters_.Clone() : null;
      hotkeysOverlayToggle_ = other.hotkeysOverlayToggle_ != null ? other.hotkeysOverlayToggle_.Clone() : null;
      hotkeysOverlayHide_ = other.hotkeysOverlayHide_ != null ? other.hotkeysOverlayHide_.Clone() : null;
      hotkeysCaptureScreenshot_ = other.hotkeysCaptureScreenshot_ != null ? other.hotkeysCaptureScreenshot_.Clone() : null;
      downloads_ = other.downloads_ != null ? other.downloads_.Clone() : null;
      betas_ = other.betas_ != null ? other.betas_.Clone() : null;
      autoPatching_ = other.autoPatching_ != null ? other.autoPatching_.Clone() : null;
      spotlight_ = other.spotlight_ != null ? other.spotlight_.Clone() : null;
      modelessPositions_ = other.modelessPositions_ != null ? other.modelessPositions_.Clone() : null;
      conversations_ = other.conversations_ != null ? other.conversations_.Clone() : null;
      epic_ = other.epic_ != null ? other.epic_.Clone() : null;
      brandedInstaller_ = other.brandedInstaller_ != null ? other.brandedInstaller_.Clone() : null;
      sharePlay_ = other.sharePlay_ != null ? other.sharePlay_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SettingsModel Clone() {
      return new SettingsModel(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::Uplay.Settings.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "overlay" field.</summary>
    public const int OverlayFieldNumber = 2;
    private global::Uplay.Settings.Overlay overlay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Overlay Overlay {
      get { return overlay_; }
      set {
        overlay_ = value;
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private global::Uplay.Settings.Language language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Language Language {
      get { return language_; }
      set {
        language_ = value;
      }
    }

    /// <summary>Field number for the "misc" field.</summary>
    public const int MiscFieldNumber = 4;
    private global::Uplay.Settings.Misc misc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Misc Misc {
      get { return misc_; }
      set {
        misc_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 5;
    private global::Uplay.Settings.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "notifications" field.</summary>
    public const int NotificationsFieldNumber = 6;
    private global::Uplay.Settings.Notifications notifications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Notifications Notifications {
      get { return notifications_; }
      set {
        notifications_ = value;
      }
    }

    /// <summary>Field number for the "masters" field.</summary>
    public const int MastersFieldNumber = 7;
    private global::Uplay.Settings.Masters masters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Masters Masters {
      get { return masters_; }
      set {
        masters_ = value;
      }
    }

    /// <summary>Field number for the "hotkeys_overlayToggle" field.</summary>
    public const int HotkeysOverlayToggleFieldNumber = 9;
    private global::Uplay.Settings.Hotkey hotkeysOverlayToggle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Hotkey HotkeysOverlayToggle {
      get { return hotkeysOverlayToggle_; }
      set {
        hotkeysOverlayToggle_ = value;
      }
    }

    /// <summary>Field number for the "hotkeys_overlayHide" field.</summary>
    public const int HotkeysOverlayHideFieldNumber = 10;
    private global::Uplay.Settings.Hotkey hotkeysOverlayHide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Hotkey HotkeysOverlayHide {
      get { return hotkeysOverlayHide_; }
      set {
        hotkeysOverlayHide_ = value;
      }
    }

    /// <summary>Field number for the "hotkeys_captureScreenshot" field.</summary>
    public const int HotkeysCaptureScreenshotFieldNumber = 11;
    private global::Uplay.Settings.Hotkey hotkeysCaptureScreenshot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Hotkey HotkeysCaptureScreenshot {
      get { return hotkeysCaptureScreenshot_; }
      set {
        hotkeysCaptureScreenshot_ = value;
      }
    }

    /// <summary>Field number for the "downloads" field.</summary>
    public const int DownloadsFieldNumber = 12;
    private global::Uplay.Settings.Downloads downloads_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Downloads Downloads {
      get { return downloads_; }
      set {
        downloads_ = value;
      }
    }

    /// <summary>Field number for the "betas" field.</summary>
    public const int BetasFieldNumber = 13;
    private global::Uplay.Settings.Betas betas_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Betas Betas {
      get { return betas_; }
      set {
        betas_ = value;
      }
    }

    /// <summary>Field number for the "autoPatching" field.</summary>
    public const int AutoPatchingFieldNumber = 14;
    private global::Uplay.Settings.AutoPatching autoPatching_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.AutoPatching AutoPatching {
      get { return autoPatching_; }
      set {
        autoPatching_ = value;
      }
    }

    /// <summary>Field number for the "spotlight" field.</summary>
    public const int SpotlightFieldNumber = 15;
    private global::Uplay.Settings.Spotlight spotlight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Spotlight Spotlight {
      get { return spotlight_; }
      set {
        spotlight_ = value;
      }
    }

    /// <summary>Field number for the "modeless_positions" field.</summary>
    public const int ModelessPositionsFieldNumber = 16;
    private global::Uplay.Settings.ModelessPositions modelessPositions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.ModelessPositions ModelessPositions {
      get { return modelessPositions_; }
      set {
        modelessPositions_ = value;
      }
    }

    /// <summary>Field number for the "conversations" field.</summary>
    public const int ConversationsFieldNumber = 17;
    private global::Uplay.Settings.Conversations conversations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Conversations Conversations {
      get { return conversations_; }
      set {
        conversations_ = value;
      }
    }

    /// <summary>Field number for the "epic" field.</summary>
    public const int EpicFieldNumber = 18;
    private global::Uplay.Settings.Epic epic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.Epic Epic {
      get { return epic_; }
      set {
        epic_ = value;
      }
    }

    /// <summary>Field number for the "branded_installer" field.</summary>
    public const int BrandedInstallerFieldNumber = 19;
    private global::Uplay.Settings.BrandedInstaller brandedInstaller_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.BrandedInstaller BrandedInstaller {
      get { return brandedInstaller_; }
      set {
        brandedInstaller_ = value;
      }
    }

    /// <summary>Field number for the "sharePlay" field.</summary>
    public const int SharePlayFieldNumber = 20;
    private global::Uplay.Settings.SharePlay sharePlay_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Uplay.Settings.SharePlay SharePlay {
      get { return sharePlay_; }
      set {
        sharePlay_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SettingsModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SettingsModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      if (!object.Equals(Overlay, other.Overlay)) return false;
      if (!object.Equals(Language, other.Language)) return false;
      if (!object.Equals(Misc, other.Misc)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Notifications, other.Notifications)) return false;
      if (!object.Equals(Masters, other.Masters)) return false;
      if (!object.Equals(HotkeysOverlayToggle, other.HotkeysOverlayToggle)) return false;
      if (!object.Equals(HotkeysOverlayHide, other.HotkeysOverlayHide)) return false;
      if (!object.Equals(HotkeysCaptureScreenshot, other.HotkeysCaptureScreenshot)) return false;
      if (!object.Equals(Downloads, other.Downloads)) return false;
      if (!object.Equals(Betas, other.Betas)) return false;
      if (!object.Equals(AutoPatching, other.AutoPatching)) return false;
      if (!object.Equals(Spotlight, other.Spotlight)) return false;
      if (!object.Equals(ModelessPositions, other.ModelessPositions)) return false;
      if (!object.Equals(Conversations, other.Conversations)) return false;
      if (!object.Equals(Epic, other.Epic)) return false;
      if (!object.Equals(BrandedInstaller, other.BrandedInstaller)) return false;
      if (!object.Equals(SharePlay, other.SharePlay)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (overlay_ != null) hash ^= Overlay.GetHashCode();
      if (language_ != null) hash ^= Language.GetHashCode();
      if (misc_ != null) hash ^= Misc.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (notifications_ != null) hash ^= Notifications.GetHashCode();
      if (masters_ != null) hash ^= Masters.GetHashCode();
      if (hotkeysOverlayToggle_ != null) hash ^= HotkeysOverlayToggle.GetHashCode();
      if (hotkeysOverlayHide_ != null) hash ^= HotkeysOverlayHide.GetHashCode();
      if (hotkeysCaptureScreenshot_ != null) hash ^= HotkeysCaptureScreenshot.GetHashCode();
      if (downloads_ != null) hash ^= Downloads.GetHashCode();
      if (betas_ != null) hash ^= Betas.GetHashCode();
      if (autoPatching_ != null) hash ^= AutoPatching.GetHashCode();
      if (spotlight_ != null) hash ^= Spotlight.GetHashCode();
      if (modelessPositions_ != null) hash ^= ModelessPositions.GetHashCode();
      if (conversations_ != null) hash ^= Conversations.GetHashCode();
      if (epic_ != null) hash ^= Epic.GetHashCode();
      if (brandedInstaller_ != null) hash ^= BrandedInstaller.GetHashCode();
      if (sharePlay_ != null) hash ^= SharePlay.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (overlay_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overlay);
      }
      if (language_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Language);
      }
      if (misc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Misc);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (notifications_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Notifications);
      }
      if (masters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Masters);
      }
      if (hotkeysOverlayToggle_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HotkeysOverlayToggle);
      }
      if (hotkeysOverlayHide_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(HotkeysOverlayHide);
      }
      if (hotkeysCaptureScreenshot_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HotkeysCaptureScreenshot);
      }
      if (downloads_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Downloads);
      }
      if (betas_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Betas);
      }
      if (autoPatching_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AutoPatching);
      }
      if (spotlight_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Spotlight);
      }
      if (modelessPositions_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ModelessPositions);
      }
      if (conversations_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Conversations);
      }
      if (epic_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Epic);
      }
      if (brandedInstaller_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BrandedInstaller);
      }
      if (sharePlay_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(SharePlay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (overlay_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Overlay);
      }
      if (language_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Language);
      }
      if (misc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Misc);
      }
      if (position_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Position);
      }
      if (notifications_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Notifications);
      }
      if (masters_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Masters);
      }
      if (hotkeysOverlayToggle_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(HotkeysOverlayToggle);
      }
      if (hotkeysOverlayHide_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(HotkeysOverlayHide);
      }
      if (hotkeysCaptureScreenshot_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(HotkeysCaptureScreenshot);
      }
      if (downloads_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Downloads);
      }
      if (betas_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Betas);
      }
      if (autoPatching_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(AutoPatching);
      }
      if (spotlight_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Spotlight);
      }
      if (modelessPositions_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ModelessPositions);
      }
      if (conversations_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Conversations);
      }
      if (epic_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(Epic);
      }
      if (brandedInstaller_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(BrandedInstaller);
      }
      if (sharePlay_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(SharePlay);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (overlay_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Overlay);
      }
      if (language_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Language);
      }
      if (misc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Misc);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (notifications_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Notifications);
      }
      if (masters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Masters);
      }
      if (hotkeysOverlayToggle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotkeysOverlayToggle);
      }
      if (hotkeysOverlayHide_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotkeysOverlayHide);
      }
      if (hotkeysCaptureScreenshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HotkeysCaptureScreenshot);
      }
      if (downloads_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Downloads);
      }
      if (betas_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Betas);
      }
      if (autoPatching_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoPatching);
      }
      if (spotlight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spotlight);
      }
      if (modelessPositions_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ModelessPositions);
      }
      if (conversations_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Conversations);
      }
      if (epic_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Epic);
      }
      if (brandedInstaller_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BrandedInstaller);
      }
      if (sharePlay_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SharePlay);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SettingsModel other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Uplay.Settings.User();
        }
        User.MergeFrom(other.User);
      }
      if (other.overlay_ != null) {
        if (overlay_ == null) {
          Overlay = new global::Uplay.Settings.Overlay();
        }
        Overlay.MergeFrom(other.Overlay);
      }
      if (other.language_ != null) {
        if (language_ == null) {
          Language = new global::Uplay.Settings.Language();
        }
        Language.MergeFrom(other.Language);
      }
      if (other.misc_ != null) {
        if (misc_ == null) {
          Misc = new global::Uplay.Settings.Misc();
        }
        Misc.MergeFrom(other.Misc);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Uplay.Settings.Position();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.notifications_ != null) {
        if (notifications_ == null) {
          Notifications = new global::Uplay.Settings.Notifications();
        }
        Notifications.MergeFrom(other.Notifications);
      }
      if (other.masters_ != null) {
        if (masters_ == null) {
          Masters = new global::Uplay.Settings.Masters();
        }
        Masters.MergeFrom(other.Masters);
      }
      if (other.hotkeysOverlayToggle_ != null) {
        if (hotkeysOverlayToggle_ == null) {
          HotkeysOverlayToggle = new global::Uplay.Settings.Hotkey();
        }
        HotkeysOverlayToggle.MergeFrom(other.HotkeysOverlayToggle);
      }
      if (other.hotkeysOverlayHide_ != null) {
        if (hotkeysOverlayHide_ == null) {
          HotkeysOverlayHide = new global::Uplay.Settings.Hotkey();
        }
        HotkeysOverlayHide.MergeFrom(other.HotkeysOverlayHide);
      }
      if (other.hotkeysCaptureScreenshot_ != null) {
        if (hotkeysCaptureScreenshot_ == null) {
          HotkeysCaptureScreenshot = new global::Uplay.Settings.Hotkey();
        }
        HotkeysCaptureScreenshot.MergeFrom(other.HotkeysCaptureScreenshot);
      }
      if (other.downloads_ != null) {
        if (downloads_ == null) {
          Downloads = new global::Uplay.Settings.Downloads();
        }
        Downloads.MergeFrom(other.Downloads);
      }
      if (other.betas_ != null) {
        if (betas_ == null) {
          Betas = new global::Uplay.Settings.Betas();
        }
        Betas.MergeFrom(other.Betas);
      }
      if (other.autoPatching_ != null) {
        if (autoPatching_ == null) {
          AutoPatching = new global::Uplay.Settings.AutoPatching();
        }
        AutoPatching.MergeFrom(other.AutoPatching);
      }
      if (other.spotlight_ != null) {
        if (spotlight_ == null) {
          Spotlight = new global::Uplay.Settings.Spotlight();
        }
        Spotlight.MergeFrom(other.Spotlight);
      }
      if (other.modelessPositions_ != null) {
        if (modelessPositions_ == null) {
          ModelessPositions = new global::Uplay.Settings.ModelessPositions();
        }
        ModelessPositions.MergeFrom(other.ModelessPositions);
      }
      if (other.conversations_ != null) {
        if (conversations_ == null) {
          Conversations = new global::Uplay.Settings.Conversations();
        }
        Conversations.MergeFrom(other.Conversations);
      }
      if (other.epic_ != null) {
        if (epic_ == null) {
          Epic = new global::Uplay.Settings.Epic();
        }
        Epic.MergeFrom(other.Epic);
      }
      if (other.brandedInstaller_ != null) {
        if (brandedInstaller_ == null) {
          BrandedInstaller = new global::Uplay.Settings.BrandedInstaller();
        }
        BrandedInstaller.MergeFrom(other.BrandedInstaller);
      }
      if (other.sharePlay_ != null) {
        if (sharePlay_ == null) {
          SharePlay = new global::Uplay.Settings.SharePlay();
        }
        SharePlay.MergeFrom(other.SharePlay);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Uplay.Settings.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (overlay_ == null) {
              Overlay = new global::Uplay.Settings.Overlay();
            }
            input.ReadMessage(Overlay);
            break;
          }
          case 26: {
            if (language_ == null) {
              Language = new global::Uplay.Settings.Language();
            }
            input.ReadMessage(Language);
            break;
          }
          case 34: {
            if (misc_ == null) {
              Misc = new global::Uplay.Settings.Misc();
            }
            input.ReadMessage(Misc);
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (notifications_ == null) {
              Notifications = new global::Uplay.Settings.Notifications();
            }
            input.ReadMessage(Notifications);
            break;
          }
          case 58: {
            if (masters_ == null) {
              Masters = new global::Uplay.Settings.Masters();
            }
            input.ReadMessage(Masters);
            break;
          }
          case 74: {
            if (hotkeysOverlayToggle_ == null) {
              HotkeysOverlayToggle = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysOverlayToggle);
            break;
          }
          case 82: {
            if (hotkeysOverlayHide_ == null) {
              HotkeysOverlayHide = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysOverlayHide);
            break;
          }
          case 90: {
            if (hotkeysCaptureScreenshot_ == null) {
              HotkeysCaptureScreenshot = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysCaptureScreenshot);
            break;
          }
          case 98: {
            if (downloads_ == null) {
              Downloads = new global::Uplay.Settings.Downloads();
            }
            input.ReadMessage(Downloads);
            break;
          }
          case 106: {
            if (betas_ == null) {
              Betas = new global::Uplay.Settings.Betas();
            }
            input.ReadMessage(Betas);
            break;
          }
          case 114: {
            if (autoPatching_ == null) {
              AutoPatching = new global::Uplay.Settings.AutoPatching();
            }
            input.ReadMessage(AutoPatching);
            break;
          }
          case 122: {
            if (spotlight_ == null) {
              Spotlight = new global::Uplay.Settings.Spotlight();
            }
            input.ReadMessage(Spotlight);
            break;
          }
          case 130: {
            if (modelessPositions_ == null) {
              ModelessPositions = new global::Uplay.Settings.ModelessPositions();
            }
            input.ReadMessage(ModelessPositions);
            break;
          }
          case 138: {
            if (conversations_ == null) {
              Conversations = new global::Uplay.Settings.Conversations();
            }
            input.ReadMessage(Conversations);
            break;
          }
          case 146: {
            if (epic_ == null) {
              Epic = new global::Uplay.Settings.Epic();
            }
            input.ReadMessage(Epic);
            break;
          }
          case 154: {
            if (brandedInstaller_ == null) {
              BrandedInstaller = new global::Uplay.Settings.BrandedInstaller();
            }
            input.ReadMessage(BrandedInstaller);
            break;
          }
          case 162: {
            if (sharePlay_ == null) {
              SharePlay = new global::Uplay.Settings.SharePlay();
            }
            input.ReadMessage(SharePlay);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::Uplay.Settings.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 18: {
            if (overlay_ == null) {
              Overlay = new global::Uplay.Settings.Overlay();
            }
            input.ReadMessage(Overlay);
            break;
          }
          case 26: {
            if (language_ == null) {
              Language = new global::Uplay.Settings.Language();
            }
            input.ReadMessage(Language);
            break;
          }
          case 34: {
            if (misc_ == null) {
              Misc = new global::Uplay.Settings.Misc();
            }
            input.ReadMessage(Misc);
            break;
          }
          case 42: {
            if (position_ == null) {
              Position = new global::Uplay.Settings.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 50: {
            if (notifications_ == null) {
              Notifications = new global::Uplay.Settings.Notifications();
            }
            input.ReadMessage(Notifications);
            break;
          }
          case 58: {
            if (masters_ == null) {
              Masters = new global::Uplay.Settings.Masters();
            }
            input.ReadMessage(Masters);
            break;
          }
          case 74: {
            if (hotkeysOverlayToggle_ == null) {
              HotkeysOverlayToggle = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysOverlayToggle);
            break;
          }
          case 82: {
            if (hotkeysOverlayHide_ == null) {
              HotkeysOverlayHide = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysOverlayHide);
            break;
          }
          case 90: {
            if (hotkeysCaptureScreenshot_ == null) {
              HotkeysCaptureScreenshot = new global::Uplay.Settings.Hotkey();
            }
            input.ReadMessage(HotkeysCaptureScreenshot);
            break;
          }
          case 98: {
            if (downloads_ == null) {
              Downloads = new global::Uplay.Settings.Downloads();
            }
            input.ReadMessage(Downloads);
            break;
          }
          case 106: {
            if (betas_ == null) {
              Betas = new global::Uplay.Settings.Betas();
            }
            input.ReadMessage(Betas);
            break;
          }
          case 114: {
            if (autoPatching_ == null) {
              AutoPatching = new global::Uplay.Settings.AutoPatching();
            }
            input.ReadMessage(AutoPatching);
            break;
          }
          case 122: {
            if (spotlight_ == null) {
              Spotlight = new global::Uplay.Settings.Spotlight();
            }
            input.ReadMessage(Spotlight);
            break;
          }
          case 130: {
            if (modelessPositions_ == null) {
              ModelessPositions = new global::Uplay.Settings.ModelessPositions();
            }
            input.ReadMessage(ModelessPositions);
            break;
          }
          case 138: {
            if (conversations_ == null) {
              Conversations = new global::Uplay.Settings.Conversations();
            }
            input.ReadMessage(Conversations);
            break;
          }
          case 146: {
            if (epic_ == null) {
              Epic = new global::Uplay.Settings.Epic();
            }
            input.ReadMessage(Epic);
            break;
          }
          case 154: {
            if (brandedInstaller_ == null) {
              BrandedInstaller = new global::Uplay.Settings.BrandedInstaller();
            }
            input.ReadMessage(BrandedInstaller);
            break;
          }
          case 162: {
            if (sharePlay_ == null) {
              SharePlay = new global::Uplay.Settings.SharePlay();
            }
            input.ReadMessage(SharePlay);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
